{"version":3,"sources":["modules/generate.js","modules/about.js","modules/import.js","modules/table.js","modules/mass_chart.js","modules/doc.js","modules/frequency_chart.js","modules/motif.js","modules/docs.js","modules/motifs.js","modules/empty.js","modules/options.js","App.js","serviceWorker.js","index.js"],"names":["GenerateLink","props","state","given_link","generated_link","url","target","value","enc","encodeURIComponent","url2","window","location","hostname","this","setState","Form","Group","controlId","Label","Control","placeholder","onChange","e","generate_experiment_link","Text","className","readOnly","React","Component","AboutPage","href","ImportJSON","loading","type","accept","MyTable","columns","data","onClick","useTable","initialState","pageIndex","pageSize","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageCount","pageOptions","gotoPage","nextPage","previousPage","setPageSize","Table","striped","bordered","hover","size","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","Pagination","First","disabled","Prev","String","Number","style","width","Next","Last","PlotlyComponent","createPlotlyComponent","Plotly","MassChart","featureNames","featureValues","lossNames","lossValues","peaks","a","push","losses","x","y","name","layout","title","xaxis","yaxis","config","showLink","displayModeBar","DocPage","key","dockey","lda","features","featuresc","Header","accessor","inten","sortMethod","b","Object","keys","corpus","motifs","motifsc","prob","toFixed","over","theta","options","thresholds","probability","overlap_scores","overlap","chartData","chart2Data","includes","split","fragments","length","console","log","info","doc_metadata","popUpObj","open","addEventListener","peakArray","setTimeout","clearPlot","getData","Card","body","Button","william","ListGroup","Item","isReadOnly","infoChange","showMotif","FreqChart","frag","inst","intenM","intenD","thing","marker","opacity","yaxis2","overlaying","side","MotifPage","motifkey","beta","docs","docsc","docFragments","phi","fragment","totalIntensities","word_index","feature_probability","topic_metadata","showDoc","DocsPage","onChangeDebounced","searchtemp","search","searchData","JSON","stringify","debounce","nextProps","nextState","FormControl","searchFilter","MotifsPage","checked","FormGroup","Check","id","label","docsChange","motifsChange","thresholdsChange","App","modal","modalName","modalBody","imported","about","import","legacy","showdoc","showmotif","showgenerate","bydocs","bymotifs","showOptions","url_string","URL","paramValue","decodeURIComponent","searchParams","get","linkToState","Modal","aria-labelledby","centered","closeButton","Title","Body","children","Footer","onHide","showstate","document","createElement","createObjectURL","Blob","download","appendChild","click","removeChild","which","importJSON","fetch","mode","then","response","text","parse","catch","error","event","file","files","reader","FileReader","onload","result","setModalShow","readAsText","val","Navbar","fixed","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","exportJSON","NavDropdown","byToggle","Divider","discardLDA","optionsModal","linkModal","example","aboutModal","CenterModal","show","fileJSON","optionChange","Boolean","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aa777989.chunk.js","sourcesContent":["//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\n\n\nexport default class GenerateLink extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            given_link: \"http://...\",\n            generated_link: \"\",\n        }\n    }\n\n    //Encode given url\n    generate_experiment_link(url) {\n        url = url.target.value\n        let enc = encodeURIComponent(url)\n        let url2 = window.location.hostname + '?fetch_project=' + enc\n        this.setState({\n            given_link: url,\n            generated_link: url2,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group controlId=\"formForLink\">\n                        <Form.Label>External Link Url</Form.Label>\n                        <Form.Control\n                            placeholder={this.state.given_link}\n                            onChange={(e) => this.generate_experiment_link(e)}\n                        />\n                        <Form.Text className=\"text-muted\">\n                            Link to json file donwload hosted externally.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formForGLink\">\n                        <Form.Label>Link for quick access</Form.Label>\n                        <Form.Control\n                            value={this.state.generated_link}\n                            readOnly\n                        />\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class AboutPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        return (\n            <div>\n                <p>Developer: Domantas Jonas Sakalys</p>\n                <p>Original website could be found here: <a href=\"http://www.ms2lda.org\">www.ms2lda.org</a></p>\n            </div>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class ImportJSON extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: this.props.loading,\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.loading ?\n                    <div>\n                        <p>Import a JSON of an LDA file.</p>\n                        <p>Please go to the Legacy option if you have a .dict file</p>\n                        <input\n                            type=\"file\"\n                            accept=\".json\"\n                            onChange={(e) => {\n                                this.props.onChange(e)\n                                this.setState({\n                                    loading: true,\n                                })\n                                }} />\n                    </div>\n                : <p>Loading, this takes a couple of seconds</p>}\n            </div>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table'\nimport Pagination from 'react-bootstrap/Pagination'\n\n//React Table\nimport { useTable, usePagination, useSortBy } from 'react-table'\n\nexport default function MyTable({ columns, data, onClick }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    // eslint-disable-next-line\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    // eslint-disable-next-line\n    setPageSize,\n    // eslint-disable-next-line\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useSortBy,\n    usePagination\n  )\n\n  // Render Data Table UI\n  return (\n    <div className=\"table-container\">\n      <Table {...getTableProps()} striped bordered hover size=\"sm\">\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' 🔽'\n                        : ' 🔼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()} onClick={ () => {onClick(row.cells[0].value)}}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}><p className=\"table-cell\">{cell.render('Cell')}</p></td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n\n\n      <div className=\"pagination\">\n        <Pagination>\n          <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage} />\n          <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\n          \n          <input\n            value={String(pageIndex + 1) + \" (\" + String(pageCount) + \") \"}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n          <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\n          <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage} />\n        </Pagination>\n      </div>\n    </div>\n\n  )\n}\n// export default function TableExample() {\n//   const data = [\n//     {\n//       name: 'Leanne Graham',\n//       email: 'Sincere@april.biz',\n//       age: 28,\n//       status: 'Active'\n//     },\n//     {\n//       name: 'Ervin Howell',\n//       email: 'Shanna@melissa.tv',\n//       age: 35,\n//       status: 'Active'\n//     },\n//   ]\n\n//   const columns = [\n//     {\n//       Header: 'Name',\n//       accessor: 'name'\n//     }, {\n//       Header: 'Email',\n//       accessor: 'email'\n//     }, {\n//       Header: 'Age',\n//       accessor: 'age'\n//     }, {\n//       Header: 'Status',\n//       accessor: 'status'\n//     }\n//   ]\n\n//   return (\n//     <MyTable data={data} columns={columns} onClick={(thing) => console.log(thing)} />\n//   )\n// }","import React from 'react';\nimport './App.css';\n\nimport createPlotlyComponent from 'react-plotlyjs';\n\nimport Plotly from 'plotly.js/dist/plotly-cartesian';\nconst PlotlyComponent = createPlotlyComponent(Plotly);\n\nclass MassChart extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    //props.data = {peaks: [[],[],[]], losses: [[],[],[]],}\n    //Appears just in docs!\n    \n\n    let featureNames = []\n    let featureValues = []\n    let lossNames = []\n    let lossValues = []\n    for(let a of props.data.peaks){\n        featureNames.push(a[0])\n        featureValues.push(a[1])\n    }\n    for(let a of props.data.losses){\n        lossNames.push(a[0])\n        lossValues.push(a[1])\n    }\n    this.state = {\n        featureNames: featureNames,\n        featureValues: featureValues,\n        lossNames: lossNames,\n        lossValues: lossValues,\n    };\n  }\n\n  render() {\n    let data = [\n      {\n        type: 'bar',      // all \"bar\" chart attributes: #bar\n        x: this.state.featureNames,     // more about \"x\": #bar-x\n        y: this.state.featureValues,     // more about \"x\": #bar-x\n        name: 'features' // #bar-name\n      },\n      {\n        type: 'bar',      // all \"bar\" chart attributes: #bar\n        x: this.state.lossNames,     // more about \"x\": #bar-x\n        y: this.state.lossValues,     // more about \"x\": #bar-x\n        name: 'losses' // #bar-name\n      }\n    ];\n    let layout = {                     // all \"layout\" attributes: #layout\n      title: 'Mass Spectrometry Plot',  // more about \"layout.title\": #layout-title\n      xaxis: {                  // all \"layout.xaxis\" attributes: #layout-xaxis\n        title: 'm/z'         // more about \"layout.xaxis.title\": #layout-xaxis-title\n      },\n      yaxis: {\n          title: 'Intensity'\n      },\n    };\n    let config = {\n      showLink: false,\n      displayModeBar: true\n    };\n    return (\n      <PlotlyComponent className=\"Chart\" data={data} layout={layout} config={config}/>\n    );\n  }\n}\n\nexport default MassChart;","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n//import ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n//Table import\nimport Table from './table.js'\n\n//Chart import\nimport MassChart from './mass_chart.js'\n\nexport default class DocPage extends React.Component {\n    constructor(props) {\n        super(props);\n        let key = props.dockey\n        let lda = props.lda\n        \n        let features = []\n        let featuresc = [{Header: 'Key', accessor: 'key'}, {Header: 'Intensity', accessor: a => Number(a.inten), sortMethod: (a, b) => Number(a)-Number(b)}]\n        \n        for (let a of Object.keys(lda.corpus[key]))\n          features.push({key: a, inten: lda.corpus[key][a]})\n\n        let motifs = []\n\n        let motifsc = [\n          {Header: 'Key', accessor: 'key'},\n          {Header: 'Probability', accessor: a => Number(a.prob).toFixed(5), sortMethod: (a, b) => Number(a)-Number(b)},\n          {Header: 'Overlap', accessor: a => Number(a.over).toFixed(7), sortMethod: (a, b) => Number(a)-Number(b)},\n        ]\n\n        for (let a of Object.keys(lda.theta[key])) {\n          if(lda.theta[key][a]>props.options.thresholds.probability && lda.overlap_scores[key][a]>props.options.thresholds.overlap)\n            motifs.push({\n              key: a,\n              prob: lda.theta[key][a],\n              over: lda.overlap_scores[key][a]\n            })\n        }\n\n        //props.data = {peaks: [[],[],[]], losses: [[],[],[]],}\n        let chartData = {peaks: [], losses: []}\n        let chart2Data = {peaks: [], losses: []}\n        for (let a of Object.keys(lda.corpus[key])){\n          if(a.includes('fragment')){\n            chartData.peaks.push([Number(a.split('_')[1]), lda.corpus[key][a]])\n          }\n          else {\n            chart2Data.losses.push([Number(a.split('_')[1]), lda.corpus[key][a]])\n          }\n        }\n        let fragments = false\n        let losses = false\n        if(chartData.peaks.length !== 0)fragments = true;\n        if(chart2Data.losses.length !== 0)losses = true;\n\n        console.log(chartData)\n\n        this.state = {\n          fragments: fragments,\n          losses: losses,\n          chartData: chartData,\n          chart2Data: chart2Data,\n          dockey: key,\n          info: lda.doc_metadata[key],\n          features: features,\n          motifs: motifs,\n          featuresc: featuresc,\n          motifsc: motifsc,\n          lda: lda\n        }\n    }\n\n    //FOR REFERANCE\n\n    // let options = {\n    //   docs: [],\n    //   motifs: [],\n    //   thresholds: {\n    //     overlap: 0, //Overlap scores\n    //     propability: 0 //Theta\n    //   }\n    // }\n\n    //<Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showMotif(key)}}/>\n\n    // const data = []\n    //     for (let key of Object.keys(this.state.searchData)) {\n    //         if (this.state.searchData[key].includes(this.state.searchtemp)){\n    //             data.push({key: key,...this.state.lda.topic_metadata[key]})\n    //         }\n    //     }\n    // let columns = []\n    // columns.push({Header: 'Key', accessor: 'key'})\n    // for (let key of Object.keys(props.lda.topic_metadata[Object.keys(props.lda.topic_metadata)[0]])) {\n    //     if(props.options.motifs[key])\n    //     columns.push({Header: key, accessor: key})\n    // }\n\n    // showDoc(key) {\n    //   console.log(\"showdoc: \" + key)\n    //   let features = []\n    //   let motifs = []\n    //   for (let a of Object.keys(this.state.lda.phi[key])) { features.push(a) }\n    //   for (let a of Object.keys(this.state.lda.phi[key])) {\n    //     for (let b of Object.keys(this.state.lda.phi[key][a]))\n    //       if (!motifs.includes(b)) {\n    //         motifs.push(b)\n    //       }\n    //   }\n    //   this.setState({\n    //     modal: true,\n    //     modalName: (<h1>Docs page of {key}</h1>),\n    //     showdoc: true,\n    //     showmotif: false,\n    //     features: features,\n    //     motifs: motifs,\n    //     dockey: key,\n    //   })\n    // }\n    infoChange(e, name){\n      let info = this.state.info\n      info[name] = e.target.value\n\n      this.setState({\n        info: info\n      })\n    }\n    isReadOnly(key){\n      let immutable = ['parentmass']\n      if(immutable.includes(key))\n        return true\n      else\n        return false\n    }\n    william(data) {\n      var url = \"/mass_spec_project/index.html\"\n      var popUpObj = window.open(url, \"Popup\",\"toolbar=no,scrollbars=no,location=no,statusbar=no,menubar=no,resizable=0,width=1400,height=850,left = 0,top = 0\");\n      popUpObj.addEventListener('load', ()=>{popUpObj.peakArray = []; setTimeout(()=>{popUpObj.clearPlot(); setTimeout(()=>{popUpObj.getData(data)},500)},500);}, false);     \n    } \n\n    render() {\n        return (\n          <div>\n            <Card body>\n            <Button onClick={()=>{this.william(this.state.chartData)}}>Link to mass_spec</Button>\n            </Card>\n            <br/>\n            {this.state.fragments?\n            <Card body>\n            <Card.Header>Fragments in Doc</Card.Header>\n              <MassChart data={this.state.chartData}></MassChart>\n            </Card>: null}\n            <br/>\n            {this.state.losses?\n            <Card body>\n            <Card.Header>Losses in Doc</Card.Header>\n              <MassChart data={this.state.chart2Data}></MassChart>\n            </Card>: null}\n            <br/>\n            <Card body>\n              <Card.Header>Info about the Doc: </Card.Header>\n              <ListGroup>\n                {Object.keys(this.state.info).map( key => { return (\n                  <ListGroup.Item key={key}>\n                    <span>{key}</span>\n                    <input\n                      value={null === this.state.info[key] ? \"\" : this.state.info[key]}\n                      readOnly={this.isReadOnly(key)}\n                      onChange={(e, name = key) => {this.infoChange(e,name)}}\n                    />\n                  </ListGroup.Item>\n                )})}\n              </ListGroup>\n              {/* <ListGroupItem><pre>{JSON.stringify(this.state.info, null, 2)}</pre></ListGroupItem> */}\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Motifs assosiated with Doc</Card.Header>\n              <ListGroup>\n                {/* {this.state.motifs.map(key => { return (<ListGroup.Item key={key} action onClick={() => this.props.showMotif(key)}>{key}</ListGroup.Item>) })} */}\n                <Table data={this.state.motifs} columns={this.state.motifsc} onClick={(key)=>{this.props.showMotif(key)}}/>\n              </ListGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Features in the Doc</Card.Header>\n              <ListGroup>\n                {/* {this.state.features.map(key => { return (<ListGroup.Item key={key}>{key}</ListGroup.Item>) })} */}\n                <Table data={this.state.features} columns={this.state.featuresc} onClick={()=>{}}/>\n              </ListGroup>\n            </Card>\n          </div>\n        );\n      }\n}","import React from 'react';\nimport './App.css';\n\nimport createPlotlyComponent from 'react-plotlyjs';\n\nimport Plotly from 'plotly.js/dist/plotly-cartesian';\nconst PlotlyComponent = createPlotlyComponent(Plotly);\n\nclass FreqChart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let frag = []\n        let inst = []\n        let intenM = []\n        let intenD = []\n\n        //props.data = {thing: [inst, intenM, intenD]}\n\n        for (let thing of Object.keys(props.data)) {\n            frag.push(thing)\n            inst.push(props.data[thing][0])\n            intenM.push(props.data[thing][1])\n            intenD.push(props.data[thing][2])\n        }\n\n        this.state = {\n            frag: frag,\n            inst: inst,\n            intenM: intenM,\n            intenD: intenD\n        }\n    }\n\n    render() {\n        let data = [\n            {\n                type: 'bar',      // all \"bar\" chart attributes: #bar\n                x: this.state.frag,   // more about \"x\": #bar-x\n                y: this.state.inst,     // more about \"x\": #bar-x\n                name: 'Instances in Motif Docs', // #bar-name\n                marker: {\n                    opacity: 0.7,\n                }\n            },\n            {\n                type: 'bar',      // all \"bar\" chart attributes: #bar\n                x: this.state.frag,     // more about \"x\": #bar-x\n                y: this.state.intenD,     // more about \"x\": #bar-x\n                name: 'Total Intensity', // #bar-name\n                yaxis: 'y2',\n                marker: {\n                    opacity: 0.5,\n                }\n            },\n            {\n                type: 'bar',      // all \"bar\" chart attributes: #bar\n                x: this.state.frag,   // more about \"x\": #bar-x\n                y: this.state.intenM,     // more about \"x\": #bar-x\n                name: 'Motif Intensity', // #bar-name\n                yaxis: 'y2',\n                marker: {\n                    opacity: 0.5,\n                }\n            },\n        ];\n        let layout = {                     // all \"layout\" attributes: #layout\n            title: 'Feature Counts',  // more about \"layout.title\": #layout-title\n            xaxis: {                  // all \"layout.xaxis\" attributes: #layout-xaxis\n                title: 'feature'         // more about \"layout.xaxis.title\": #layout-xaxis-title\n            },\n            yaxis: { title: 'instances' },\n            yaxis2: {\n                title: 'intensity',\n                overlaying: 'y',\n                side: 'right'\n            }\n        };\n        let config = {\n            showLink: false,\n            displayModeBar: true\n        };\n        return (\n                <PlotlyComponent className=\"Chart\" data={data} layout={layout} config={config} />\n        );\n    }\n}\n\nexport default FreqChart;","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\n//import ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n//Table import\nimport Table from './table.js'\n\n//Chart import\nimport FreqChart from './frequency_chart.js'\n\nexport default class MotifPage extends React.Component {\n  constructor(props) {\n    super(props);\n    let key = props.motifkey\n    let lda = props.lda\n    \n\n    let features = []\n    let featuresc = [{Header: 'Key', accessor: 'key'}, {Header: 'Probability', accessor: a => Number(a.prob).toFixed(5), sortMethod: (a, b) => Number(a)-Number(b)}]\n    for (let a of Object.keys(lda.beta[key]))\n      features.push({key: a, prob: lda.beta[key][a]})\n\n\n    let docs = []\n    let docsc = [\n      {Header: 'Key', accessor: 'key'},\n      {Header: 'Probability', accessor: a => Number(a.prob).toFixed(5), sortMethod: (a, b) => Number(a)-Number(b)},\n      {Header: 'Overlap', accessor: a => Number(a.over).toFixed(7), sortMethod: (a, b) => Number(a)-Number(b)},\n    ]\n    \n\n    let docFragments = {}// {fragment: [inst, totalInten]}\n    for (let a of Object.keys(lda.theta)) {\n      for (let b of Object.keys(lda.theta[a])) {\n        if (b === key) {\n          for(let fragment of Object.keys(lda.phi[a]))\n            try {\n              docFragments[fragment] = [docFragments[fragment][0] + 1, docFragments[fragment][1] + lda.corpus[a][fragment]]\n            } catch {\n              docFragments[fragment] = [1, lda.corpus[a][fragment]]\n            }\n          if (!docs.includes(a)) {\n            if(lda.overlap_scores[a][b]>props.options.thresholds.overlap && lda.theta[a][b]>props.options.thresholds.probability)\n\n            docs.push({\n              key: a,\n              prob: lda.theta[a][b],\n              over: lda.overlap_scores[a][b],\n            })\n          }\n        }\n      }\n    }\n    let totalIntensities = {}\n    for(let a of Object.keys(lda.word_index))\n      totalIntensities[a] = 0\n    for(let a of Object.keys(lda.phi))\n      for(let b of Object.keys(lda.corpus[a]))\n        totalIntensities[b] = totalIntensities[b] + lda.corpus[a][b]\n\n    //props.data = {thing: [inst, intenM, intenD]}\n    let data = {}\n    for (let a of Object.keys(lda.beta[key])){\n      if(lda.beta[key][a] > props.options.thresholds.feature_probability)\n        data[a] = [\n          docFragments[a][0],\n          docFragments[a][1],\n          totalIntensities[a]\n        ]\n    }\n    console.log(data)\n        \n\n\n    this.state = {\n      chartData: data,\n      fragments: true,\n      motifkey: key,\n      info: lda.topic_metadata[key],\n      features: features,\n      featuresc: featuresc,\n      docs: docs,\n      docsc: docsc,\n      lda: lda,\n      options: this.props.options\n    }\n  }\n\n  //FOR REFERANCE\n\n  // let options = {\n  //   docs: [],\n  //   motifs: [],\n  //   thresholds: {\n  //     overlap: 0, //Overlap scores\n  //     propability: 0 //Theta\n  //   }\n  // }\n\n  //<Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showMotif(key)}}/>\n\n  // const data = []\n  //     for (let key of Object.keys(this.state.searchData)) {\n  //         if (this.state.searchData[key].includes(this.state.searchtemp)){\n  //             data.push({key: key,...this.state.lda.topic_metadata[key]})\n  //         }\n  //     }\n  // let columns = []\n  // columns.push({Header: 'Key', accessor: 'key'})\n  // for (let key of Object.keys(props.lda.topic_metadata[Object.keys(props.lda.topic_metadata)[0]])) {\n  //     if(props.options.motifs[key])\n  //     columns.push({Header: key, accessor: key})\n  // }\n\n  // showMotif(key) {\n  //   console.log(\"showmotif: \" + key)\n  //   let features = []\n  //   let docs = []\n  //   for (let a of Object.keys(this.state.lda.beta[key])) { features.push(a) }\n  //   for (let a of Object.keys(this.state.lda.theta)) {\n  //     for (let b of Object.keys(this.state.lda.theta[a])) {\n  //       if (b === key) {\n  //         if (!docs.includes(a)) {\n  //           docs.push(a)\n  //         }\n  //       }\n  //     }\n  //   }\n  //   this.setState({\n  //     modal: true,\n  //     modalName: (<h1>Motif page of {key}</h1>),\n  //     showmotif: true,\n  //     showdoc: false,\n  //     features: features,\n  //     motifs: [],\n  //     docs: docs,\n  //     motifkey: key,\n  //   })\n  // }\n  infoChange(e, name){\n    let info = this.state.info\n    info[name] = e.target.value\n\n    this.setState({\n      info: info\n    })\n  }\n  isReadOnly(key){\n    let immutable = []\n    if(immutable.includes(key))\n      return true\n    else\n      return false\n  }\n\n\n  render() {\n    return (\n      <div>\n        {this.state.fragments?\n            <Card body>\n            <Card.Header>Fragments in Motif</Card.Header>\n              <FreqChart data={this.state.chartData}></FreqChart>\n            </Card>: null}\n        <Card body>\n          <Card.Header>Info about the Motif: </Card.Header>\n          <ListGroup>\n            {Object.keys(this.state.info).map(key => {\n              return (\n                <ListGroup.Item key={key}>\n                  <span>{key}</span>\n                  <input\n                    value={null === this.state.info[key] ? \"\" : this.state.info[key]}\n                    readOnly={this.isReadOnly(key)}\n                    onChange={(e, name = key) => {this.infoChange(e,name)}}\n                  />\n                </ListGroup.Item>\n              )\n            })}\n          </ListGroup>\n          {/* <ListGroupItem><pre>{JSON.stringify(this.state.info, null, 2)}</pre></ListGroupItem> */}\n        </Card>\n        <br />\n        <Card body>\n          <Card.Header>Docs assosiated with Motif</Card.Header>\n          <ListGroup>\n            <Table data={this.state.docs} columns={this.state.docsc} onClick={(key)=>{this.props.showDoc(key)}}/>\n            {/* {this.state.docs.map(key => { return (<ListGroup.Item key={key} action onClick={() => this.props.showDoc(key)}>{key}</ListGroup.Item>) })} */}\n          </ListGroup>\n        </Card>\n        <br />\n        <Card body>\n          <Card.Header>Features assosiated with Motif</Card.Header>\n          <ListGroup>\n            <Table data={this.state.features} columns={this.state.featuresc} onClick={()=>{}}/>\n            {/* {this.state.features.map(key => { return (<ListGroup.Item key={key}>{key}</ListGroup.Item>) })} */}\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport FormControl from 'react-bootstrap/FormControl';\n//import Table from 'react-bootstrap/Table'\n\n//Other imports\nimport debounce from 'lodash.debounce';\n\n//Table import\nimport Table from './table.js'\n\nexport default class DocsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        //Searchable string\n        let searchData = {}\n        for (let key of Object.keys(props.lda.doc_metadata)) {\n            searchData[key] = JSON.stringify(props.lda.doc_metadata[key])\n        }\n        //Top level keys\n        let columns = []\n        columns.push({Header: 'Name', accessor: 'name'})\n        for (let key of Object.keys(props.lda.doc_metadata[Object.keys(props.lda.doc_metadata)[0]])) {\n            if(props.options.docs[key]){\n                columns.push({Header: key, accessor: key})\n                console.log(props.options.docs[key])\n            }\n        }\n\n        this.state = {\n            search: \"\",\n            searchtemp: \"\",\n            columns: columns,\n            searchData: searchData,\n            lda: props.lda\n        }\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 500)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.searchtemp !== nextState.searchtemp) {\n            return false;\n        } else {\n            return true\n        }\n    }\n\n    searchFilter(e) {\n        this.setState({\n            searchtemp: e.target.value\n        })\n        this.onChangeDebounced(e.target.value)\n    }\n\n    onChangeDebounced = (e) => {\n        if (this.state.searchtemp === e)\n            this.setState({\n                search: this.state.searchtemp\n            })\n    }\n\n    render() {\n        const data = []\n        for (let key of Object.keys(this.state.searchData)) {\n            if (this.state.searchData[key].includes(this.state.searchtemp)){\n                data.push({name: key,...this.state.lda.doc_metadata[key]})\n            }\n        }\n\n        return (\n            <Card body className=\"mx-auto\">\n                <Card.Header>\n                    <h1>Showing Docs</h1>\n                    <FormControl\n                        onChange={e => this.searchFilter(e)}\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        className=\"mr-sm-2\"\n                    />\n                </Card.Header>\n                <Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showDoc(key)}}/>\n            </Card>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport FormControl from 'react-bootstrap/FormControl';\n\n//Other imports\nimport debounce from 'lodash.debounce';\n\n//Table import\nimport Table from './table.js'\n\n\nexport default class MotifsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        //Searchable string\n        let searchData = {}\n        for (let key of Object.keys(props.lda.topic_metadata)) {\n            searchData[key] = JSON.stringify(props.lda.topic_metadata[key])\n        }\n        //Top level keys\n        let columns = []\n        columns.push({Header: 'Key', accessor: 'key'})\n        for (let key of Object.keys(props.lda.topic_metadata[Object.keys(props.lda.topic_metadata)[0]])) {\n            if(props.options.motifs[key])\n            columns.push({Header: key, accessor: key})\n        }\n        \n        this.state = {\n            search: \"\",\n            searchtemp: \"\",\n            columns: columns,\n            searchData: searchData,\n            lda: props.lda\n        }\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 500)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.searchtemp !== nextState.searchtemp) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    \n    searchFilter(e) {\n        this.setState({\n            searchtemp: e.target.value\n        })\n        this.onChangeDebounced(e.target.value)\n    }\n\n    onChangeDebounced = (e) => {\n        if (this.state.searchtemp === e)\n        this.setState({\n            search: this.state.searchtemp\n        })\n    }\n\n    render() {\n        const data = []\n        for (let key of Object.keys(this.state.searchData)) {\n            if (this.state.searchData[key].includes(this.state.searchtemp)){\n                data.push({key: key,...this.state.lda.topic_metadata[key]})\n            }\n        }\n\n        return (\n            <Card body className=\"mx-auto\">\n                <Card.Header>\n                    <h1>Showing Motifs</h1>\n                    <FormControl\n                        onChange={e => this.searchFilter(e)}\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        className=\"mr-sm-2\"\n                    />\n                </Card.Header>\n                <Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showMotif(key)}}/>\n            </Card>\n        );\n        // return (\n        //     <Card body className=\"mx-auto\">\n        //         <Card.Header>\n        //             <h1>Showing Motifs</h1>\n        //             <FormControl onChange={e => this.searchFilter(e)} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        //         </Card.Header>\n        //         <ListGroup>{Object.keys(this.props.lda.beta).map((key, index) => {\n        //             if (key.includes(this.state.search))\n        //                 return (<ListGroup.Item action key={index} onClick={() => this.props.showMotif(key)}>{key}</ListGroup.Item>)\n        //             else return null\n        //         })}</ListGroup>\n        //     </Card>\n        // );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class DocsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        return (\n            <header className={\"vertical-center d-flex justify-content-center\"}>\n                <h1>\n                    Import a file to get started!\n                </h1>\n            </header>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Form from 'react-bootstrap/Form'\nimport FormGroup from 'react-bootstrap/FormGroup'\n\n\nexport default class MotifPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            motifs: props.options.motifs,\n            docs: props.options.docs,\n            thresholds: props.options.thresholds\n        }\n    }\n    docsChange(e, name, value){\n      let docs = this.state.docs\n      docs[name] = e.target.checked\n      this.setState({\n        docs: docs\n      })\n    }\n    motifsChange(e, name, value){\n      let motifs = this.state.motifs\n      motifs[name] = e.target.checked\n      this.setState({\n        motifs: motifs\n      })\n    }\n    thresholdsChange(e, name){\n      let thresholds = this.state.thresholds\n      thresholds[name] = e.target.value\n      this.setState({\n        thresholds: thresholds\n      })\n    }\n    // componentWillUnmount(){\n    //   let options = {\n    //     motifs: this.state.motifs,\n    //     docs: this.state.docs,\n    //     thresholds: this.state.thresholds\n    //   }\n    //   this.props.optionChange(options)\n    // }\n    render() {\n        return (\n          <div>\n            <Card body>\n              <Card.Header>Docs View options</Card.Header>\n              <FormGroup>\n              {/* action onClick={() => this.props.showDoc(key)} */}\n                {Object.keys(this.state.docs).map(key => {return (\n                    <Form.Check \n                    type={\"checkbox\"}\n                    id={\"default-checkbox\"}\n                    key={key}\n                    label={key}\n                    checked={this.state.docs[key]}\n                    onChange={(e, name = key) => {this.docsChange(e, name)}}\n                    />\n                )})}\n              </FormGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Motif View options</Card.Header>\n              <FormGroup>\n                {Object.keys(this.state.motifs).map(key => {return (\n                    <Form.Check \n                    type={\"checkbox\"}\n                    id={\"default-checkbox\"}\n                    key={key}\n                    label={key}\n                    checked={this.state.motifs[key]}\n                    onChange={(e, name = key) => {this.motifsChange(e, name)}}\n                    />\n                )})}\n              </FormGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Thresholds</Card.Header>\n              <ListGroup>\n                {Object.keys(this.state.thresholds).map(key => {\n                  return (<ListGroup.Item\n                    key={key}\n                    >\n                    <span>{key}</span>\n                    <input\n                      value={this.state.thresholds[key]}\n                      onChange={(e, name = key) => {this.thresholdsChange(e, name)}}\n                    />\n                </ListGroup.Item>) })}\n              </ListGroup>\n            </Card>\n          </div>\n        );\n      }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './modules/App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n// import ListGroup from 'react-bootstrap/ListGroup'\n// import Card from 'react-bootstrap/Card'\n// import ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n//Other imports\n\n\n//Component Classes\n\n//Share experiment\nimport GenerateLink from './modules/generate.js';\n\n//About page\nimport AboutPage from './modules/about.js';\n\n//Import JSON page\nimport ImportJSON from './modules/import.js';\n\n//Import Docs page\nimport DocPage from './modules/doc.js';\n\n//Import Motifs page\nimport MotifPage from './modules/motif.js';\n\n//Import Docs page\nimport DocsPage from './modules/docs.js';\n\n//Import Motifs page\nimport MotifsPage from './modules/motifs.js';\n\n//Import Motifs page\nimport EmptyPage from './modules/empty.js';\n\n//Import Options page\nimport Options from './modules/options.js';\n\n//Table testing\n//import EmptyPage from './modules/table.js';\n\n\n//Main app class\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      modalName: \"\",\n      modalBody: \"\",\n      loading: false,\n      imported: false,\n      about: false,\n      import: false,\n      legacy: false,\n      showdoc: false,\n      showmotif: false,\n      showgenerate: false,\n      bydocs: false,\n      bymotifs: false,\n      dockey: \"\",\n      motifkey: \"\",\n      lda: {},\n      features: [],\n      motifs: [],\n      docs: [],\n      showOptions: false,\n      options: {\n        docs: [],\n        motifs: [],\n        thresholds: [],\n      }\n    };\n    let url_string = window.location.href; // www.test.com?filename=test\n    let url = new URL(url_string);\n    let paramValue = decodeURIComponent(url.searchParams.get(\"fetch_project\"));\n    if (paramValue) { this.linkToState(paramValue); console.log(paramValue) }\n  }\n\n  //Site Modal management ====================================================================\n  CenterModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {props.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.children}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  setModalShow(showstate) {\n    if (showstate === false) {\n      if (this.state.showOptions){\n\n      }\n      this.setState({\n        modalName: \"\",\n        about: false,\n        import: false,\n        legacy: false,\n        showOptions: false,\n        modal: false,\n        showdoc: false,\n        showmotif: false,\n        showgenerate: false,\n      })\n    } else {\n      this.setState({\n        modal: true,\n      })\n    }\n  }\n\n  linkModal() {\n    console.log(\"link1\")\n    this.setState({\n      modalName: (<h1>Generate a sharable link</h1>),\n      modal: true,\n      showgenerate: true,\n    })\n  }\n\n  importJSON() {\n    console.log(\"import1\")\n    this.setState({\n      modal: true,\n      modalName: \"Import\",\n      import: true,\n    })\n  }\n\n  aboutModal() {\n    console.log(\"about1\")\n    this.setState({\n      modalName: (<h1>About</h1>),\n      modal: true,\n      about: true,\n    })\n  }\n\n  optionsModal() {\n    console.log(\"options1\")\n    this.setState({\n      modalName: (<h1>Options</h1>),\n      modal: true,\n      showOptions: true,\n    })\n  }\n\n  optionChange(options){\n    this.setState({\n      options: options,\n    })\n  }\n\n  //Large unseperated modal functions\n  showDoc(key) {\n    console.log(\"showdoc: \" + key)\n    let features = []\n    let motifs = []\n    for (let a of Object.keys(this.state.lda.phi[key])) { features.push(a) }\n    for (let a of Object.keys(this.state.lda.phi[key])) {\n      for (let b of Object.keys(this.state.lda.phi[key][a]))\n        if (!motifs.includes(b)) {\n          motifs.push(b)\n        }\n    }\n    this.setState({\n      modal: true,\n      modalName: (<h1>Docs page of {key}</h1>),\n      showdoc: true,\n      showmotif: false,\n      features: features,\n      motifs: motifs,\n      dockey: key,\n    })\n  }\n\n  showMotif(key) {\n    console.log(\"showmotif: \" + key)\n    let features = []\n    let docs = []\n    for (let a of Object.keys(this.state.lda.beta[key])) { features.push(a) }\n    for (let a of Object.keys(this.state.lda.theta)) {\n      for (let b of Object.keys(this.state.lda.theta[a])) {\n        if (b === key) {\n          if (!docs.includes(a)) {\n            docs.push(a)\n          }\n        }\n      }\n    }\n    this.setState({\n      modal: true,\n      modalName: (<h1>Motif page of {key}</h1>),\n      showmotif: true,\n      showdoc: false,\n      features: features,\n      motifs: [],\n      docs: docs,\n      motifkey: key,\n    })\n  }\n\n  //Other functions\n  exportJSON() {\n    console.log(\"export1\")\n    var a = document.createElement('A');\n    a.href = URL.createObjectURL(new Blob([JSON.stringify(this.state.lda)]));\n    a.download = \"exportedLDA.json\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  example(which) {\n    if (which === 1)\n    this.linkToState(\"../example/\")\n    else this.linkToState(\"../example2/\")\n  }\n\n  linkToState(url) {\n    this.setState({\n      loading: true\n    })\n    this.importJSON()\n    fetch(url, { mode: 'no-cors' })\n      .then(response => response.text())\n      .then(data => {\n        let lda = JSON.parse(data)\n        let options = {\n          docs: [],\n          motifs: [],\n          thresholds: {\n            overlap: 0, //Overlap scores\n            probability: 0, //Theta\n            feature_probability: 0,\n          }\n        }\n        for (let key of Object.keys(lda.doc_metadata[Object.keys(lda.doc_metadata)[0]])) {\n            options.docs[key] = true\n        }\n        for (let key of Object.keys(lda.topic_metadata[Object.keys(lda.topic_metadata)[0]])) {\n          options.motifs[key] = true\n        }\n        this.setState({\n          lda: lda,\n          options: options,\n          imported: true,\n          bydocs: true,\n          loading: false,\n        })\n      })\n      .catch(error => {\n        this.setState({\n          loading: false,\n        })\n        console.error(error)\n      });\n  }\n\n  discardLDA() {\n    console.log(\"discard\")\n    this.setState({\n      bymotifs: false,\n      bydocs: false,\n      imported: false,\n      lda: \"\",\n    })\n  }\n\n  fileJSON(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = (event) => {\n      let lda = JSON.parse(event.target.result)\n      //console.log(lda)\n      let options = {\n        docs: [],\n        motifs: [],\n        thresholds: {\n          overlap: 0, //Overlap scores\n          probability: 0, //Theta\n          feature_probability: 0\n        }\n      }\n      for (let key of Object.keys(lda.doc_metadata[Object.keys(lda.doc_metadata)[0]])) {\n          options.docs[key] = true\n      }\n      for (let key of Object.keys(lda.topic_metadata[Object.keys(lda.topic_metadata)[0]])) {\n        options.motifs[key] = true\n      }\n      this.setState({\n        lda: lda,\n        options: options,\n        imported: true,\n        bydocs: true,\n        loading: false,\n      })\n      this.setModalShow(false)\n    };\n    reader.readAsText(file)\n  }\n\n  byToggle(val) {\n    this.setState({\n      bydocs: val,\n      bymotifs: !val,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"MS2LDAviz2\">\n        <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">MS2LDAviz2</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {this.state.imported ?\n                < >\n                  <Nav.Link onClick={() => this.exportJSON()}>Export</Nav.Link>\n                  <NavDropdown title=\"Explore LDA\" id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item onClick={() => this.byToggle(true)}>By Docs</NavDropdown.Item>\n                    <NavDropdown.Item onClick={() => this.byToggle(false)}>By Mass2Motifs</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item>Store In-Browser (Unavailable)</NavDropdown.Item>\n                    <NavDropdown.Item>Match with MotifDB (Unavailable)</NavDropdown.Item>\n                  </NavDropdown>\n                  <Nav.Link onClick={() => this.discardLDA()}>Discard</Nav.Link>\n                  <Nav.Link onClick={() => this.optionsModal()}>Options</Nav.Link>\n                </ > : < >\n                  <Nav.Link onClick={() => this.importJSON()}>Import</Nav.Link>\n                  <Nav.Link target=\"_blank\" href={\"../legacy/\"} >Legacy</Nav.Link>\n                </ >}\n            </Nav>\n            <Nav.Link onClick={() => this.linkModal()}>Share</Nav.Link>\n            {/* <Nav.Link onClick={() => this.example(1)}>Example</Nav.Link> */}\n            <Nav.Link onClick={() => this.example(2)}>Example</Nav.Link>\n            <Nav.Link onClick={() => this.aboutModal()}>About</Nav.Link>\n          </Navbar.Collapse>\n        </Navbar>\n\n        {!this.state.imported ? <EmptyPage/> : null }\n        {this.state.imported && this.state.bydocs ? <DocsPage options={this.state.options} lda={this.state.lda} showDoc={(key) => this.showDoc(key)} /> : null}\n        {this.state.imported && this.state.bymotifs ? <MotifsPage options={this.state.options} lda={this.state.lda} showMotif={(key) => this.showMotif(key)} /> : null}\n\n        <this.CenterModal\n          show={this.state.modal}\n          onHide={() => this.setModalShow(false)}\n          title={this.state.modalName}>\n          {this.state.showgenerate ?\n            <GenerateLink /> : null}\n          {this.state.about ?\n            <AboutPage /> : null}\n          {this.state.import ?\n            <ImportJSON onChange={e => this.fileJSON(e)} loading={this.state.loading} /> : null}\n          {this.state.showOptions ?\n            <Options options={this.state.options} optionChange={(options) => this.optionChange(options)} /> : null}\n          \n          {this.state.showdoc ?\n            <DocPage\n              lda={this.state.lda}\n              options={this.state.options}\n              dockey={this.state.dockey}\n              features={this.state.features}\n              motifs={this.state.motifs}\n              showMotif={(key) => this.showMotif(key)}\n            /> : null}\n\n          {this.state.showmotif ?\n            <MotifPage\n              lda={this.state.lda}\n              options={this.state.options}\n              motifkey={this.state.motifkey}\n              features={this.state.features}\n              docs={this.state.docs}\n              showDoc={(key) => this.showDoc(key)}\n            /> : null}\n\n        </this.CenterModal>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}