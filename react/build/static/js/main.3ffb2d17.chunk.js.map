{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","modal","modalName","modalBody","imported","about","import","legacy","showdoc","showmotif","bydocs","bymotifs","dockey","motifkey","lda","features","motifs","docs","search","export","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","title","Body","children","Footer","Button","onClick","onHide","href","type","accept","thing","this","setState","console","log","a","document","createElement","URL","createObjectURL","Blob","JSON","stringify","download","body","appendChild","click","removeChild","linkToState","url","fetch","mode","then","response","text","data","parse","loading","catch","error","word","key","Object","keys","phi","push","b","includes","Card","ListGroupItem","info","ListGroup","map","Item","action","showMotif","beta","theta","showDoc","event","file","target","files","reader","FileReader","onload","result","setModalShow","readAsText","val","className","Navbar","fixed","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","exportJSON","NavDropdown","byToggle","Divider","discardLDA","importJSON","importLegacy","example","aboutModal","FormControl","onChange","e","searchFilter","value","placeholder","index","CenterModal","show","fileJSON","HelloTestPage","ImportJSONPage","DocPage","doc_metadata","MotifPage","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3ffb2d17.chunk.js","sourcesContent":["//React imports\nimport React from 'react';\n//import banner from './banner.png';\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n//import Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Modal from 'react-bootstrap/Modal';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n//Other imports\n\n//Main app class\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      modalName: \"\",\n      modalBody: \"\",\n      imported: false,\n      about: false,\n      import: false,\n      legacy: false,\n      showdoc: false,\n      showmotif: false,\n      bydocs: false,\n      bymotifs: false,\n      dockey: \"\",\n      motifkey: \"\",\n      lda: {},\n      features: [],\n      motifs: [],\n      docs: [],\n      search: \"\",\n      export: \"#\",\n    };\n  }\n\n  CenterModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {props.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.children}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  HelloTestPage(props) {\n    return (\n      <div>\n        <p>Developer: Domantas Jonas Sakalys</p>\n        <p>Original website could be found here: <a href=\"http://www.ms2lda.org\">www.ms2lda.org</a></p>\n      </div>\n    );\n  }\n\n  ImportJSONPage(props) {\n    return (\n      <div>\n        <p>Import a JSON of an LDA file.</p>\n        <p>Please go to the Legacy option if you have a .dict file</p>\n        <input type=\"file\" accept=\".json\" />\n      </div>\n    );\n  }\n\n  setModalShow(thing) {\n    if (thing === false) {\n      this.setState({\n        modalName: \"\",\n        about: false,\n        import: false,\n        legacy: false,\n        modal: false,\n        showdoc: false,\n      })\n    } else {\n      this.setState({\n        modal: true,\n      })\n    }\n  }\n\n  importJSON() {\n    console.log(\"import1\")\n    this.setState({\n      modal: true,\n      modalName: \"Import\",\n      import: true,\n    })\n  }\n\n  exportJSON() {\n    console.log(\"export1\")\n    var a = document.createElement('A');\n    a.href = URL.createObjectURL(new Blob([JSON.stringify(this.state.lda)]));\n    a.download = \"exportedLDA.json\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  importLegacy() {\n    console.log(\"import2\")\n  }\n\n  example() {\n    // target=\"_blank\" href={\"../example/\"} download={\"example.json\"}\n    this.linkToState(\"../example/\")\n    // var file = event.target.files[0];\n    // var reader = new FileReader();\n    // reader.onload = (event) => {\n    //   this.setState({\n    //     lda: JSON.parse(event.target.result),\n    //     imported: true,\n    //     bydocs: true,\n    //     loading: false,\n    //   })\n    //   this.setModalShow(false)\n    // };\n    // reader.readAsText(file)\n  }\n\n  linkToState(url) {\n    fetch(url, {mode: 'no-cors'})\n      .then(response => response.text())\n      .then(data => {\n        console.log(data)\n        this.setState({\n          lda: JSON.parse(data),\n          imported: true,\n          bydocs: true,\n          loading: false,\n      })})\n      .catch(error => console.error(error));\n\n  }\n\n  discardLDA() {\n    console.log(\"discard\")\n    this.setState({\n      imported: false,\n      lda: \"\",\n    })\n  }\n\n  aboutModal() {\n    console.log(\"about1\")\n    this.setState({\n      modal: true,\n      about: true,\n    })\n  }\n\n  searchFilter(word) {\n    this.setState({\n      search: word\n    })//.then(console.log(this.state.word))\n  }\n\n  showDoc(key) {\n    console.log(\"showdoc: \" + key)\n    let features = []\n    let motifs = []\n    for (let a of Object.keys(this.state.lda.phi[key])) { features.push(a) }\n    for (let a of Object.keys(this.state.lda.phi[key])) {\n      for (let b of Object.keys(this.state.lda.phi[key][a]))\n        if (!motifs.includes(b)) {\n          motifs.push(b)\n        }\n    }\n    this.setState({\n      modal: true,\n      modalName: (<h1>Docs page of {key}</h1>),\n      showdoc: true,\n      showmotif: false,\n      features: features,\n      motifs: motifs,\n      dockey: key,\n    })\n  }\n\n  DocPage(props) {\n    return (\n      <div>\n        <Card body>\n          <Card.Header>Info about the Doc: </Card.Header>\n          <ListGroupItem><pre>{JSON.stringify(props.info, null, 2)}</pre></ListGroupItem>\n        </Card>\n        <br />\n        <Card body>\n          <Card.Header>Motifs assosiated with Doc</Card.Header>\n          <ListGroup>\n            {props.motifs.map(key => { return (<ListGroup.Item key={key} action onClick={() => props.showMotif(key)}>{key}</ListGroup.Item>) })}\n          </ListGroup>\n        </Card>\n        <br />\n        <Card body>\n          <Card.Header>Features in the Doc</Card.Header>\n          <ListGroup>\n            {props.features.map(key => { return (<ListGroup.Item key={key}>{key}</ListGroup.Item>) })}\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n\n  showMotif(key) {\n    console.log(\"showmotif: \" + key)\n    let features = []\n    let docs = []\n    for (let a of Object.keys(this.state.lda.beta[key])) { features.push(a) }\n    for (let a of Object.keys(this.state.lda.theta)) {\n      for (let b of Object.keys(this.state.lda.theta[a])) {\n        if (b === key) {\n          if (!docs.includes(a)) {\n            docs.push(a)\n          }\n        }\n      }\n    }\n    this.setState({\n      modal: true,\n      modalName: (<h1>Motif page of {key}</h1>),\n      showmotif: true,\n      showdoc: false,\n      features: features,\n      motifs: [],\n      docs: docs,\n    })\n  }\n\n  MotifPage(props) {\n    return (\n      <div>\n        <Card body>\n          <Card.Header>Docs assosiated with Motif</Card.Header>\n          <ListGroup>\n            {props.docs.map(key => { return (<ListGroup.Item key={key} action onClick={() => props.showDoc(key)}>{key}</ListGroup.Item>) })}\n          </ListGroup>\n        </Card>\n        <br />\n        <Card body>\n          <Card.Header>Features assosiated with Motif</Card.Header>\n          <ListGroup>\n            {props.features.map(key => { return (<ListGroup.Item key={key}>{key}</ListGroup.Item>) })}\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n\n  // Callback from a <input type=\"file\" onchange=\"onChange(event)\">\n  fileJSON(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = (event) => {\n      this.setState({\n        lda: JSON.parse(event.target.result),\n        imported: true,\n        bydocs: true,\n        loading: false,\n      })\n      this.setModalShow(false)\n    };\n    reader.readAsText(file)\n  }\n\n  byToggle(val) {\n    this.setState({\n      bydocs: val,\n      bymotifs: !val,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"MS2LDAviz2\">\n        <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">MS2LDAviz2</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {this.state.imported ?\n                < >\n                  <Nav.Link onClick={() => this.exportJSON()}>Export</Nav.Link>\n                  <NavDropdown title=\"Explore LDA\" id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item onClick={() => this.byToggle(true)}>By Docs</NavDropdown.Item>\n                    <NavDropdown.Item onClick={() => this.byToggle(false)}>By Mass2Motifs</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item>Store In-Browser</NavDropdown.Item>\n                  </NavDropdown>\n                  <Nav.Link onClick={() => this.discardLDA()}>Discard</Nav.Link>\n                </ > : < >\n                  <Nav.Link onClick={() => this.importJSON()}>Import</Nav.Link>\n                  <Nav.Link target=\"_blank\" href={\"../legacy/\"} onClick={() => this.importLegacy()}>Legacy</Nav.Link>\n                </ >}\n            </Nav>\n            <Nav.Link onClick={() => this.example()}>Example</Nav.Link>\n            <Nav.Link onClick={() => this.aboutModal()}>About</Nav.Link>\n          </Navbar.Collapse>\n        </Navbar>\n        {!this.state.imported ?\n          <header className={\"vertical-center d-flex justify-content-center\"}>\n            <h1>\n              Import a file to get started!\n          </h1>\n          </header> : null}\n        {this.state.imported && this.state.bydocs ?\n          <Card body className=\"mx-auto\">\n            <Card.Header>\n              <h1>Showing Docs</h1>\n              <FormControl onChange={e => this.searchFilter(e.target.value)} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            </Card.Header>\n            <ListGroup>{Object.keys(this.state.lda.phi).map((key, index) => {\n              if (key.includes(this.state.search))\n                return (<ListGroup.Item action key={index} onClick={() => this.showDoc(key)}>{key}</ListGroup.Item>)\n              else return null\n            })}\n            </ListGroup>\n          </Card> : null}\n        {this.state.imported && this.state.bymotifs ?\n          <Card body className=\"mx-auto\">\n            <Card.Header>\n              <h1>Showing Motifs</h1>\n              <FormControl onChange={e => this.searchFilter(e.target.value)} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            </Card.Header>\n            <ListGroup>{Object.keys(this.state.lda.beta).map((key, index) => {\n              if (key.includes(this.state.search))\n                return (<ListGroup.Item action key={index} onClick={() => this.showMotif(key)}>{key}</ListGroup.Item>)\n              else return null\n            })}</ListGroup>\n          </Card> : null}\n\n\n        <this.CenterModal\n          show={this.state.modal}\n          onHide={() => this.setModalShow(false)}\n          title={this.state.modalName}\n          onChange={e => this.fileJSON(e)}>\n          {this.state.about ?\n            <this.HelloTestPage /> : null}\n          {this.state.import ?\n            <this.ImportJSONPage /> : null}\n          {this.state.showdoc ?\n            <this.DocPage info={this.state.lda.doc_metadata[this.state.dockey]} features={this.state.features} motifs={this.state.motifs} showMotif={(key) => this.showMotif(key)} /> : null}\n          {this.state.showmotif ?\n            <this.MotifPage features={this.state.features} docs={this.state.docs} showDoc={(key) => this.showDoc(key)} /> : null}\n        </this.CenterModal>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}