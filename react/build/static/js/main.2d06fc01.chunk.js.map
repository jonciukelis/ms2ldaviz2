{"version":3,"sources":["modules/generate.js","modules/about.js","modules/import.js","modules/doc.js","modules/table.js","modules/motif.js","modules/docs.js","modules/motifs.js","modules/empty.js","modules/options.js","App.js","serviceWorker.js","index.js"],"names":["GenerateLink","props","state","given_link","generated_link","url","target","value","enc","encodeURIComponent","url2","window","location","hostname","this","setState","Form","Group","controlId","Label","Control","placeholder","onChange","e","generate_experiment_link","Text","className","React","Component","AboutPage","href","ImportJSON","loading","type","accept","DocPage","dockey","info","lda","doc_metadata","features","motifs","Card","body","Header","ListGroupItem","JSON","stringify","ListGroup","map","key","Item","action","onClick","showMotif","MyTable","columns","data","useTable","initialState","pageIndex","pageSize","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageCount","pageOptions","gotoPage","nextPage","previousPage","setPageSize","Table","striped","bordered","hover","size","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","Pagination","First","disabled","Prev","String","Number","style","width","Next","Last","MotifPage","motifkey","topic_metadata","docs","options","showDoc","DocsPage","onChangeDebounced","searchtemp","search","searchData","Object","keys","push","accessor","console","log","debounce","nextProps","nextState","includes","name","FormControl","searchFilter","MotifsPage","thresholds","checked","FormGroup","Check","id","label","docsChange","motifsChange","thresholdsChange","App","modal","modalName","modalBody","imported","about","import","legacy","showdoc","showmotif","showgenerate","bydocs","bymotifs","showOptions","url_string","URL","paramValue","decodeURIComponent","searchParams","get","linkToState","Modal","aria-labelledby","centered","closeButton","Title","title","Body","children","Footer","Button","onHide","showstate","phi","a","b","beta","theta","document","createElement","createObjectURL","Blob","download","appendChild","click","removeChild","fetch","mode","then","response","text","parse","catch","error","event","file","files","reader","FileReader","onload","result","overlap","propability","setModalShow","readAsText","val","Navbar","fixed","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","exportJSON","NavDropdown","byToggle","Divider","discardLDA","optionsModal","importJSON","linkModal","example","aboutModal","CenterModal","show","fileJSON","optionChange","Boolean","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2d06fc01.chunk.js","sourcesContent":["//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\n\n\nexport default class GenerateLink extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            given_link: \"http://...\",\n            generated_link: \"\",\n        }\n    }\n\n    //Encode given url\n    generate_experiment_link(url) {\n        url = url.target.value\n        let enc = encodeURIComponent(url)\n        let url2 = window.location.hostname + '?fetch_project=' + enc\n        this.setState({\n            given_link: url,\n            generated_link: url2,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group controlId=\"formForLink\">\n                        <Form.Label>External Link Url</Form.Label>\n                        <Form.Control\n                            placeholder={this.state.given_link}\n                            onChange={(e) => this.generate_experiment_link(e)}\n                        />\n                        <Form.Text className=\"text-muted\">\n                            Link to json file donwload hosted externally.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formForGLink\">\n                        <Form.Label>Link for quick access</Form.Label>\n                        <Form.Control\n                            value={this.state.generated_link}\n                        />\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class AboutPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        return (\n            <div>\n                <p>Developer: Domantas Jonas Sakalys</p>\n                <p>Original website could be found here: <a href=\"http://www.ms2lda.org\">www.ms2lda.org</a></p>\n            </div>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class ImportJSON extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.loading ?\n                    <div>\n                        <p>Import a JSON of an LDA file.</p>\n                        <p>Please go to the Legacy option if you have a .dict file</p>\n                        <input\n                            type=\"file\"\n                            accept=\".json\"\n                            onChange={(e) => {\n                                this.props.onChange(e)\n                                this.setState({\n                                    loading: true,\n                                })\n                                }} />\n                    </div>\n                : <p>Loading, this takes a couple of seconds</p>}\n            </div>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n\nexport default class DocPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          dockey: this.props.dockey,\n          info: this.props.lda.doc_metadata[this.props.dockey],\n          features: this.props.features,\n          motifs: this.props.motifs,\n          lda: this.props.lda\n        }\n    }\n\n    //FOR REFERANCE\n\n    // let options = {\n    //   docs: [],\n    //   motifs: [],\n    //   thresholds: {\n    //     overlap: 0, //Overlap scores\n    //     propability: 0 //Theta\n    //   }\n    // }\n\n    //<Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showMotif(key)}}/>\n\n    // const data = []\n    //     for (let key of Object.keys(this.state.searchData)) {\n    //         if (this.state.searchData[key].includes(this.state.searchtemp)){\n    //             data.push({key: key,...this.state.lda.topic_metadata[key]})\n    //         }\n    //     }\n    // let columns = []\n    // columns.push({Header: 'Key', accessor: 'key'})\n    // for (let key of Object.keys(props.lda.topic_metadata[Object.keys(props.lda.topic_metadata)[0]])) {\n    //     if(props.options.motifs[key])\n    //     columns.push({Header: key, accessor: key})\n    // }\n\n    // showDoc(key) {\n    //   console.log(\"showdoc: \" + key)\n    //   let features = []\n    //   let motifs = []\n    //   for (let a of Object.keys(this.state.lda.phi[key])) { features.push(a) }\n    //   for (let a of Object.keys(this.state.lda.phi[key])) {\n    //     for (let b of Object.keys(this.state.lda.phi[key][a]))\n    //       if (!motifs.includes(b)) {\n    //         motifs.push(b)\n    //       }\n    //   }\n    //   this.setState({\n    //     modal: true,\n    //     modalName: (<h1>Docs page of {key}</h1>),\n    //     showdoc: true,\n    //     showmotif: false,\n    //     features: features,\n    //     motifs: motifs,\n    //     dockey: key,\n    //   })\n    // }\n\n\n    render() {\n        return (\n          <div>\n            <Card body>\n              <Card.Header>Info about the Doc: </Card.Header>\n              <ListGroupItem><pre>{JSON.stringify(this.state.info, null, 2)}</pre></ListGroupItem>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Motifs assosiated with Doc</Card.Header>\n              <ListGroup>\n                {this.state.motifs.map(key => { return (<ListGroup.Item key={key} action onClick={() => this.props.showMotif(key)}>{key}</ListGroup.Item>) })}\n              </ListGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Features in the Doc</Card.Header>\n              <ListGroup>\n                {this.state.features.map(key => { return (<ListGroup.Item key={key}>{key}</ListGroup.Item>) })}\n              </ListGroup>\n            </Card>\n          </div>\n        );\n      }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table'\nimport Pagination from 'react-bootstrap/Pagination'\n\n//React Table\nimport { useTable, usePagination, useSortBy } from 'react-table'\n\nexport default function MyTable({ columns, data, onClick }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    // eslint-disable-next-line\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    // eslint-disable-next-line\n    setPageSize,\n    // eslint-disable-next-line\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useSortBy,\n    usePagination\n  )\n\n  // Render Data Table UI\n  return (\n    <div className=\"table-container\">\n      <Table {...getTableProps()} striped bordered hover size=\"sm\">\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' 🔽'\n                        : ' 🔼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()} onClick={ () => {onClick(row.cells[0].value)}}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}><p className=\"table-cell\">{cell.render('Cell')}</p></td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n\n\n      <div className=\"pagination\">\n        <Pagination>\n          <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage} />\n          <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\n          \n          <input\n            value={String(pageIndex + 1) + \" (\" + String(pageCount) + \") \"}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n          <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\n          <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage} />\n        </Pagination>\n      </div>\n    </div>\n\n  )\n}\n// export default function TableExample() {\n//   const data = [\n//     {\n//       name: 'Leanne Graham',\n//       email: 'Sincere@april.biz',\n//       age: 28,\n//       status: 'Active'\n//     },\n//     {\n//       name: 'Ervin Howell',\n//       email: 'Shanna@melissa.tv',\n//       age: 35,\n//       status: 'Active'\n//     },\n//   ]\n\n//   const columns = [\n//     {\n//       Header: 'Name',\n//       accessor: 'name'\n//     }, {\n//       Header: 'Email',\n//       accessor: 'email'\n//     }, {\n//       Header: 'Age',\n//       accessor: 'age'\n//     }, {\n//       Header: 'Status',\n//       accessor: 'status'\n//     }\n//   ]\n\n//   return (\n//     <MyTable data={data} columns={columns} onClick={(thing) => console.log(thing)} />\n//   )\n// }","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n//Table import\nimport Table from './table.js'\n\nexport default class MotifPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          motifkey: this.props.motifkey,\n          info: this.props.lda.topic_metadata[this.props.motifkey],\n          features: this.props.features,\n          docs: this.props.docs,\n          lda: this.props.lda, \n          options: this.props.options\n        }\n    }\n\n    //FOR REFERANCE\n\n    // let options = {\n    //   docs: [],\n    //   motifs: [],\n    //   thresholds: {\n    //     overlap: 0, //Overlap scores\n    //     propability: 0 //Theta\n    //   }\n    // }\n\n    //<Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showMotif(key)}}/>\n\n    // const data = []\n    //     for (let key of Object.keys(this.state.searchData)) {\n    //         if (this.state.searchData[key].includes(this.state.searchtemp)){\n    //             data.push({key: key,...this.state.lda.topic_metadata[key]})\n    //         }\n    //     }\n    // let columns = []\n    // columns.push({Header: 'Key', accessor: 'key'})\n    // for (let key of Object.keys(props.lda.topic_metadata[Object.keys(props.lda.topic_metadata)[0]])) {\n    //     if(props.options.motifs[key])\n    //     columns.push({Header: key, accessor: key})\n    // }\n\n    // showMotif(key) {\n    //   console.log(\"showmotif: \" + key)\n    //   let features = []\n    //   let docs = []\n    //   for (let a of Object.keys(this.state.lda.beta[key])) { features.push(a) }\n    //   for (let a of Object.keys(this.state.lda.theta)) {\n    //     for (let b of Object.keys(this.state.lda.theta[a])) {\n    //       if (b === key) {\n    //         if (!docs.includes(a)) {\n    //           docs.push(a)\n    //         }\n    //       }\n    //     }\n    //   }\n    //   this.setState({\n    //     modal: true,\n    //     modalName: (<h1>Motif page of {key}</h1>),\n    //     showmotif: true,\n    //     showdoc: false,\n    //     features: features,\n    //     motifs: [],\n    //     docs: docs,\n    //     motifkey: key,\n    //   })\n    // }\n\n\n    render() {\n        return (\n          <div>\n            <Card body>\n              <Card.Header>Info about the Motif: </Card.Header>\n              <ListGroupItem><pre>{JSON.stringify(this.state.info, null, 2)}</pre></ListGroupItem>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Docs assosiated with Motif</Card.Header>\n              <ListGroup>\n                {this.state.docs.map(key => { return (<ListGroup.Item key={key} action onClick={() => this.props.showDoc(key)}>{key}</ListGroup.Item>) })}\n              </ListGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Features assosiated with Motif</Card.Header>\n              <ListGroup>\n                {this.state.features.map(key => { return (<ListGroup.Item key={key}>{key}</ListGroup.Item>) })}\n              </ListGroup>\n            </Card>\n          </div>\n        );\n      }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport FormControl from 'react-bootstrap/FormControl';\n//import Table from 'react-bootstrap/Table'\n\n//Other imports\nimport debounce from 'lodash.debounce';\n\n//Table import\nimport Table from './table.js'\n\nexport default class DocsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        //Searchable string\n        let searchData = {}\n        for (let key of Object.keys(props.lda.doc_metadata)) {\n            searchData[key] = JSON.stringify(props.lda.doc_metadata[key])\n        }\n        //Top level keys\n        let columns = []\n        columns.push({Header: 'Name', accessor: 'name'})\n        for (let key of Object.keys(props.lda.doc_metadata[Object.keys(props.lda.doc_metadata)[0]])) {\n            if(props.options.docs[key]){\n                columns.push({Header: key, accessor: key})\n                console.log(props.options.docs[key])\n            }\n        }\n\n        this.state = {\n            search: \"\",\n            searchtemp: \"\",\n            columns: columns,\n            searchData: searchData,\n            lda: props.lda\n        }\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 500)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.searchtemp !== nextState.searchtemp) {\n            return false;\n        } else {\n            return true\n        }\n    }\n\n    searchFilter(e) {\n        this.setState({\n            searchtemp: e.target.value\n        })\n        this.onChangeDebounced(e.target.value)\n    }\n\n    onChangeDebounced = (e) => {\n        if (this.state.searchtemp === e)\n            this.setState({\n                search: this.state.searchtemp\n            })\n    }\n\n    render() {\n        const data = []\n        for (let key of Object.keys(this.state.searchData)) {\n            if (this.state.searchData[key].includes(this.state.searchtemp)){\n                data.push({name: key,...this.state.lda.doc_metadata[key]})\n            }\n        }\n\n        return (\n            <Card body className=\"mx-auto\">\n                <Card.Header>\n                    <h1>Showing Docs</h1>\n                    <FormControl\n                        onChange={e => this.searchFilter(e)}\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        className=\"mr-sm-2\"\n                    />\n                </Card.Header>\n                <Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showDoc(key)}}/>\n            </Card>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport FormControl from 'react-bootstrap/FormControl';\n\n//Other imports\nimport debounce from 'lodash.debounce';\n\n//Table import\nimport Table from './table.js'\n\n\nexport default class MotifsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        //Searchable string\n        let searchData = {}\n        for (let key of Object.keys(props.lda.topic_metadata)) {\n            searchData[key] = JSON.stringify(props.lda.topic_metadata[key])\n        }\n        //Top level keys\n        let columns = []\n        columns.push({Header: 'Key', accessor: 'key'})\n        for (let key of Object.keys(props.lda.topic_metadata[Object.keys(props.lda.topic_metadata)[0]])) {\n            if(props.options.motifs[key])\n            columns.push({Header: key, accessor: key})\n        }\n        \n        this.state = {\n            search: \"\",\n            searchtemp: \"\",\n            columns: columns,\n            searchData: searchData,\n            lda: props.lda\n        }\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 500)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.searchtemp !== nextState.searchtemp) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    \n    searchFilter(e) {\n        this.setState({\n            searchtemp: e.target.value\n        })\n        this.onChangeDebounced(e.target.value)\n    }\n\n    onChangeDebounced = (e) => {\n        if (this.state.searchtemp === e)\n        this.setState({\n            search: this.state.searchtemp\n        })\n    }\n\n    render() {\n        const data = []\n        for (let key of Object.keys(this.state.searchData)) {\n            if (this.state.searchData[key].includes(this.state.searchtemp)){\n                data.push({key: key,...this.state.lda.topic_metadata[key]})\n            }\n        }\n\n        return (\n            <Card body className=\"mx-auto\">\n                <Card.Header>\n                    <h1>Showing Motifs</h1>\n                    <FormControl\n                        onChange={e => this.searchFilter(e)}\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        className=\"mr-sm-2\"\n                    />\n                </Card.Header>\n                <Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showMotif(key)}}/>\n            </Card>\n        );\n        // return (\n        //     <Card body className=\"mx-auto\">\n        //         <Card.Header>\n        //             <h1>Showing Motifs</h1>\n        //             <FormControl onChange={e => this.searchFilter(e)} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        //         </Card.Header>\n        //         <ListGroup>{Object.keys(this.props.lda.beta).map((key, index) => {\n        //             if (key.includes(this.state.search))\n        //                 return (<ListGroup.Item action key={index} onClick={() => this.props.showMotif(key)}>{key}</ListGroup.Item>)\n        //             else return null\n        //         })}</ListGroup>\n        //     </Card>\n        // );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class DocsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        return (\n            <header className={\"vertical-center d-flex justify-content-center\"}>\n                <h1>\n                    Import a file to get started!\n                </h1>\n            </header>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Form from 'react-bootstrap/Form'\nimport FormGroup from 'react-bootstrap/FormGroup'\n\n\nexport default class MotifPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            motifs: props.options.motifs,\n            docs: props.options.docs,\n            thresholds: props.options.thresholds\n        }\n    }\n    docsChange(e, name, value){\n      let docs = this.state.docs\n      docs[name] = e.target.checked\n      this.setState({\n        docs: docs\n      })\n    }\n    motifsChange(e, name, value){\n      let motifs = this.state.motifs\n      motifs[name] = e.target.checked\n      this.setState({\n        motifs: motifs\n      })\n    }\n    thresholdsChange(e, name){\n      let thresholds = this.state.thresholds\n      thresholds[name] = e.target.value\n      this.setState({\n        thresholds: thresholds\n      })\n    }\n    // componentWillUnmount(){\n    //   let options = {\n    //     motifs: this.state.motifs,\n    //     docs: this.state.docs,\n    //     thresholds: this.state.thresholds\n    //   }\n    //   this.props.optionChange(options)\n    // }\n    render() {\n        return (\n          <div>\n            <Card body>\n              <Card.Header>Docs View options</Card.Header>\n              <FormGroup>\n              {/* action onClick={() => this.props.showDoc(key)} */}\n                {Object.keys(this.state.docs).map(key => {return (\n                    <Form.Check \n                    type={\"checkbox\"}\n                    id={\"default-checkbox\"}\n                    key={key}\n                    label={key}\n                    checked={this.state.docs[key]}\n                    onChange={(e, name = key) => {this.docsChange(e, name)}}\n                    />\n                )})}\n              </FormGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Motif View options</Card.Header>\n              <FormGroup>\n                {Object.keys(this.state.motifs).map(key => {return (\n                    <Form.Check \n                    type={\"checkbox\"}\n                    id={\"default-checkbox\"}\n                    key={key}\n                    label={key}\n                    checked={this.state.motifs[key]}\n                    onChange={(e, name = key) => {this.motifsChange(e, name)}}\n                    />\n                )})}\n              </FormGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Thresholds</Card.Header>\n              <ListGroup>\n                {Object.keys(this.state.thresholds).map(key => {\n                  return (<ListGroup.Item\n                    key={key}\n                    >\n                    <span>{key}</span>\n                    <input\n                      value={this.state.thresholds[key]}\n                      onChange={(e, name = key) => {this.thresholdsChange(e, name)}}\n                    />\n                </ListGroup.Item>) })}\n              </ListGroup>\n            </Card>\n          </div>\n        );\n      }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './modules/App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n// import ListGroup from 'react-bootstrap/ListGroup'\n// import Card from 'react-bootstrap/Card'\n// import ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n//Other imports\n\n\n//Component Classes\n\n//Share experiment\nimport GenerateLink from './modules/generate.js';\n\n//About page\nimport AboutPage from './modules/about.js';\n\n//Import JSON page\nimport ImportJSON from './modules/import.js';\n\n//Import Docs page\nimport DocPage from './modules/doc.js';\n\n//Import Motifs page\nimport MotifPage from './modules/motif.js';\n\n//Import Docs page\nimport DocsPage from './modules/docs.js';\n\n//Import Motifs page\nimport MotifsPage from './modules/motifs.js';\n\n//Import Motifs page\nimport EmptyPage from './modules/empty.js';\n\n//Import Options page\nimport Options from './modules/options.js';\n\n//Table testing\n//import EmptyPage from './modules/table.js';\n\n\n//Main app class\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      modalName: \"\",\n      modalBody: \"\",\n      imported: false,\n      about: false,\n      import: false,\n      legacy: false,\n      showdoc: false,\n      showmotif: false,\n      showgenerate: false,\n      bydocs: false,\n      bymotifs: false,\n      dockey: \"\",\n      motifkey: \"\",\n      lda: {},\n      features: [],\n      motifs: [],\n      docs: [],\n      showOptions: false,\n      options: {\n        docs: [],\n        motifs: [],\n        thresholds: [],\n      }\n    };\n    let url_string = window.location.href; // www.test.com?filename=test\n    let url = new URL(url_string);\n    let paramValue = decodeURIComponent(url.searchParams.get(\"fetch_project\"));\n    if (paramValue) { this.linkToState(paramValue); console.log(paramValue) }\n  }\n\n  //Site Modal management ====================================================================\n  CenterModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {props.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.children}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  setModalShow(showstate) {\n    if (showstate === false) {\n      if (this.state.showOptions){\n\n      }\n      this.setState({\n        modalName: \"\",\n        about: false,\n        import: false,\n        legacy: false,\n        showOptions: false,\n        modal: false,\n        showdoc: false,\n        showmotif: false,\n        showgenerate: false,\n      })\n    } else {\n      this.setState({\n        modal: true,\n      })\n    }\n  }\n\n  linkModal() {\n    console.log(\"link1\")\n    this.setState({\n      modalName: (<h1>Generate a sharable link</h1>),\n      modal: true,\n      showgenerate: true,\n    })\n  }\n\n  importJSON() {\n    console.log(\"import1\")\n    this.setState({\n      modal: true,\n      modalName: \"Import\",\n      import: true,\n    })\n  }\n\n  aboutModal() {\n    console.log(\"about1\")\n    this.setState({\n      modalName: (<h1>About</h1>),\n      modal: true,\n      about: true,\n    })\n  }\n\n  optionsModal() {\n    console.log(\"options1\")\n    this.setState({\n      modalName: (<h1>Options</h1>),\n      modal: true,\n      showOptions: true,\n    })\n  }\n\n  optionChange(options){\n    this.setState({\n      options: options,\n    })\n  }\n\n  //Large unseperated modal functions\n  showDoc(key) {\n    console.log(\"showdoc: \" + key)\n    let features = []\n    let motifs = []\n    for (let a of Object.keys(this.state.lda.phi[key])) { features.push(a) }\n    for (let a of Object.keys(this.state.lda.phi[key])) {\n      for (let b of Object.keys(this.state.lda.phi[key][a]))\n        if (!motifs.includes(b)) {\n          motifs.push(b)\n        }\n    }\n    this.setState({\n      modal: true,\n      modalName: (<h1>Docs page of {key}</h1>),\n      showdoc: true,\n      showmotif: false,\n      features: features,\n      motifs: motifs,\n      dockey: key,\n    })\n  }\n\n  showMotif(key) {\n    console.log(\"showmotif: \" + key)\n    let features = []\n    let docs = []\n    for (let a of Object.keys(this.state.lda.beta[key])) { features.push(a) }\n    for (let a of Object.keys(this.state.lda.theta)) {\n      for (let b of Object.keys(this.state.lda.theta[a])) {\n        if (b === key) {\n          if (!docs.includes(a)) {\n            docs.push(a)\n          }\n        }\n      }\n    }\n    this.setState({\n      modal: true,\n      modalName: (<h1>Motif page of {key}</h1>),\n      showmotif: true,\n      showdoc: false,\n      features: features,\n      motifs: [],\n      docs: docs,\n      motifkey: key,\n    })\n  }\n\n  //Other functions\n  exportJSON() {\n    console.log(\"export1\")\n    var a = document.createElement('A');\n    a.href = URL.createObjectURL(new Blob([JSON.stringify(this.state.lda)]));\n    a.download = \"exportedLDA.json\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  example() {\n    this.linkToState(\"../example/\")\n  }\n\n  linkToState(url) {\n    fetch(url, { mode: 'no-cors' })\n      .then(response => response.text())\n      .then(data => {\n        this.setState({\n          lda: JSON.parse(data),\n          imported: true,\n          bydocs: true,\n          loading: false,\n        })\n      })\n      .catch(error => console.error(error));\n  }\n\n  discardLDA() {\n    console.log(\"discard\")\n    this.setState({\n      bymotifs: false,\n      bydocs: false,\n      imported: false,\n      lda: \"\",\n    })\n  }\n\n  fileJSON(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = (event) => {\n      let lda = JSON.parse(event.target.result)\n      let options = {\n        docs: [],\n        motifs: [],\n        thresholds: {\n          overlap: 0, //Overlap scores\n          propability: 0 //Theta\n        }\n      }\n      for (let key of Object.keys(lda.doc_metadata[Object.keys(lda.doc_metadata)[0]])) {\n          options.docs[key] = true\n      }\n      for (let key of Object.keys(lda.topic_metadata[Object.keys(lda.topic_metadata)[0]])) {\n        options.motifs[key] = true\n      }\n      this.setState({\n        lda: lda,\n        options: options,\n        imported: true,\n        bydocs: true,\n        loading: false,\n      })\n      this.setModalShow(false)\n    };\n    reader.readAsText(file)\n  }\n\n  byToggle(val) {\n    this.setState({\n      bydocs: val,\n      bymotifs: !val,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"MS2LDAviz2\">\n        <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">MS2LDAviz2</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {this.state.imported ?\n                < >\n                  <Nav.Link onClick={() => this.exportJSON()}>Export</Nav.Link>\n                  <NavDropdown title=\"Explore LDA\" id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item onClick={() => this.byToggle(true)}>By Docs</NavDropdown.Item>\n                    <NavDropdown.Item onClick={() => this.byToggle(false)}>By Mass2Motifs</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item>Store In-Browser</NavDropdown.Item>\n                  </NavDropdown>\n                  <Nav.Link onClick={() => this.discardLDA()}>Discard</Nav.Link>\n                  <Nav.Link onClick={() => this.optionsModal()}>Options</Nav.Link>\n                </ > : < >\n                  <Nav.Link onClick={() => this.importJSON()}>Import</Nav.Link>\n                  <Nav.Link target=\"_blank\" href={\"../legacy/\"} >Legacy</Nav.Link>\n                </ >}\n            </Nav>\n            <Nav.Link onClick={() => this.linkModal()}>Share</Nav.Link>\n            <Nav.Link onClick={() => this.example()}>Example</Nav.Link>\n            <Nav.Link onClick={() => this.aboutModal()}>About</Nav.Link>\n          </Navbar.Collapse>\n        </Navbar>\n\n        {!this.state.imported ? <EmptyPage/> : null }\n        {this.state.imported && this.state.bydocs ? <DocsPage options={this.state.options} lda={this.state.lda} showDoc={(key) => this.showDoc(key)} /> : null}\n        {this.state.imported && this.state.bymotifs ? <MotifsPage options={this.state.options} lda={this.state.lda} showMotif={(key) => this.showMotif(key)} /> : null}\n\n        <this.CenterModal\n          show={this.state.modal}\n          onHide={() => this.setModalShow(false)}\n          title={this.state.modalName}>\n          {this.state.showgenerate ?\n            <GenerateLink /> : null}\n          {this.state.about ?\n            <AboutPage /> : null}\n          {this.state.import ?\n            <ImportJSON onChange={e => this.fileJSON(e)} /> : null}\n          {this.state.showOptions ?\n            <Options options={this.state.options} optionChange={(options) => this.optionChange(options)} /> : null}\n          \n          {this.state.showdoc ?\n            <DocPage\n              lda={this.state.lda}\n              options={this.state.options}\n              dockey={this.state.dockey}\n              features={this.state.features}\n              motifs={this.state.motifs}\n              showMotif={(key) => this.showMotif(key)}\n            /> : null}\n\n          {this.state.showmotif ?\n            <MotifPage\n              lda={this.state.lda}\n              options={this.state.options}\n              motifkey={this.state.motifkey}\n              features={this.state.features}\n              docs={this.state.docs}\n              showDoc={(key) => this.showDoc(key)}\n            /> : null}\n\n        </this.CenterModal>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}