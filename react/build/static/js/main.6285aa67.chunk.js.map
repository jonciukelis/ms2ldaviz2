{"version":3,"sources":["modules/generate.js","modules/about.js","modules/import.js","modules/table.js","modules/doc.js","modules/motif.js","modules/docs.js","modules/motifs.js","modules/empty.js","modules/options.js","App.js","serviceWorker.js","index.js"],"names":["GenerateLink","props","state","given_link","generated_link","url","target","value","enc","encodeURIComponent","url2","window","location","hostname","this","setState","Form","Group","controlId","Label","Control","placeholder","onChange","e","generate_experiment_link","Text","className","readOnly","React","Component","AboutPage","href","ImportJSON","loading","type","accept","MyTable","columns","data","onClick","useTable","initialState","pageIndex","pageSize","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageCount","pageOptions","gotoPage","nextPage","previousPage","setPageSize","Table","striped","bordered","hover","size","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","Pagination","First","disabled","Prev","String","Number","style","width","Next","Last","DocPage","key","dockey","lda","features","Object","keys","corpus","a","push","inten","motifs","motifsc","Header","accessor","prob","toFixed","sortMethod","b","over","theta","options","thresholds","probability","overlap_scores","overlap","info","doc_metadata","featuresc","name","includes","Card","body","ListGroup","Item","isReadOnly","infoChange","showMotif","MotifPage","motifkey","beta","docs","docsc","topic_metadata","showDoc","DocsPage","onChangeDebounced","searchtemp","search","searchData","JSON","stringify","console","log","debounce","nextProps","nextState","FormControl","searchFilter","MotifsPage","checked","FormGroup","Check","id","label","docsChange","motifsChange","thresholdsChange","App","modal","modalName","modalBody","imported","about","import","legacy","showdoc","showmotif","showgenerate","bydocs","bymotifs","showOptions","url_string","URL","paramValue","decodeURIComponent","searchParams","get","linkToState","Modal","aria-labelledby","centered","closeButton","Title","title","Body","children","Footer","Button","onHide","showstate","phi","document","createElement","createObjectURL","Blob","download","appendChild","click","removeChild","which","fetch","mode","then","response","text","parse","catch","error","event","file","files","reader","FileReader","onload","result","setModalShow","readAsText","val","Navbar","fixed","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","exportJSON","NavDropdown","byToggle","Divider","discardLDA","optionsModal","importJSON","linkModal","example","aboutModal","CenterModal","show","fileJSON","optionChange","Boolean","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6285aa67.chunk.js","sourcesContent":["//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Form from 'react-bootstrap/Form';\n\n\nexport default class GenerateLink extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            given_link: \"http://...\",\n            generated_link: \"\",\n        }\n    }\n\n    //Encode given url\n    generate_experiment_link(url) {\n        url = url.target.value\n        let enc = encodeURIComponent(url)\n        let url2 = window.location.hostname + '?fetch_project=' + enc\n        this.setState({\n            given_link: url,\n            generated_link: url2,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    <Form.Group controlId=\"formForLink\">\n                        <Form.Label>External Link Url</Form.Label>\n                        <Form.Control\n                            placeholder={this.state.given_link}\n                            onChange={(e) => this.generate_experiment_link(e)}\n                        />\n                        <Form.Text className=\"text-muted\">\n                            Link to json file donwload hosted externally.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formForGLink\">\n                        <Form.Label>Link for quick access</Form.Label>\n                        <Form.Control\n                            value={this.state.generated_link}\n                            readOnly\n                        />\n                    </Form.Group>\n                </Form>\n            </div>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class AboutPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        return (\n            <div>\n                <p>Developer: Domantas Jonas Sakalys</p>\n                <p>Original website could be found here: <a href=\"http://www.ms2lda.org\">www.ms2lda.org</a></p>\n            </div>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class ImportJSON extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {!this.state.loading ?\n                    <div>\n                        <p>Import a JSON of an LDA file.</p>\n                        <p>Please go to the Legacy option if you have a .dict file</p>\n                        <input\n                            type=\"file\"\n                            accept=\".json\"\n                            onChange={(e) => {\n                                this.props.onChange(e)\n                                this.setState({\n                                    loading: true,\n                                })\n                                }} />\n                    </div>\n                : <p>Loading, this takes a couple of seconds</p>}\n            </div>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Table from 'react-bootstrap/Table'\nimport Pagination from 'react-bootstrap/Pagination'\n\n//React Table\nimport { useTable, usePagination, useSortBy } from 'react-table'\n\nexport default function MyTable({ columns, data, onClick }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    // eslint-disable-next-line\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    // eslint-disable-next-line\n    setPageSize,\n    // eslint-disable-next-line\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useSortBy,\n    usePagination\n  )\n\n  // Render Data Table UI\n  return (\n    <div className=\"table-container\">\n      <Table {...getTableProps()} striped bordered hover size=\"sm\">\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' 🔽'\n                        : ' 🔼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()} onClick={ () => {onClick(row.cells[0].value)}}>\n                {row.cells.map(cell => {\n                  return <td {...cell.getCellProps()}><p className=\"table-cell\">{cell.render('Cell')}</p></td>\n                })}\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n\n\n      <div className=\"pagination\">\n        <Pagination>\n          <Pagination.First onClick={() => gotoPage(0)} disabled={!canPreviousPage} />\n          <Pagination.Prev onClick={() => previousPage()} disabled={!canPreviousPage} />\n          \n          <input\n            value={String(pageIndex + 1) + \" (\" + String(pageCount) + \") \"}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n          <Pagination.Next onClick={() => nextPage()} disabled={!canNextPage} />\n          <Pagination.Last onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage} />\n        </Pagination>\n      </div>\n    </div>\n\n  )\n}\n// export default function TableExample() {\n//   const data = [\n//     {\n//       name: 'Leanne Graham',\n//       email: 'Sincere@april.biz',\n//       age: 28,\n//       status: 'Active'\n//     },\n//     {\n//       name: 'Ervin Howell',\n//       email: 'Shanna@melissa.tv',\n//       age: 35,\n//       status: 'Active'\n//     },\n//   ]\n\n//   const columns = [\n//     {\n//       Header: 'Name',\n//       accessor: 'name'\n//     }, {\n//       Header: 'Email',\n//       accessor: 'email'\n//     }, {\n//       Header: 'Age',\n//       accessor: 'age'\n//     }, {\n//       Header: 'Status',\n//       accessor: 'status'\n//     }\n//   ]\n\n//   return (\n//     <MyTable data={data} columns={columns} onClick={(thing) => console.log(thing)} />\n//   )\n// }","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\n//import ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n//Table import\nimport Table from './table.js'\n\nexport default class DocPage extends React.Component {\n    constructor(props) {\n        super(props);\n        let key = props.dockey\n        let lda = props.lda\n        \n        let features = []\n        let featuresc = [{Header: 'Key', accessor: 'key'}, {Header: 'Intensity', accessor: 'inten'}]\n        \n        for (let a of Object.keys(lda.corpus[key]))\n          features.push({key: a, inten: lda.corpus[key][a]})\n\n        let motifs = []\n\n        let motifsc = [\n          {Header: 'Key', accessor: 'key'},\n          {Header: 'Probability', accessor: a => Number(a.prob).toFixed(5), sortMethod: (a, b) => Number(a)-Number(b)},\n          {Header: 'Overlap', accessor: a => Number(a.over).toFixed(7), sortMethod: (a, b) => Number(a)-Number(b)},\n        ]\n\n        for (let a of Object.keys(lda.theta[key])) {\n          if(lda.theta[key][a]>props.options.thresholds.probability && lda.overlap_scores[key][a]>props.options.thresholds.overlap)\n            motifs.push({\n              key: a,\n              prob: lda.theta[key][a],\n              over: lda.overlap_scores[key][a]\n            })\n        }\n\n        this.state = {\n          dockey: key,\n          info: lda.doc_metadata[key],\n          features: features,\n          motifs: motifs,\n          featuresc: featuresc,\n          motifsc: motifsc,\n          lda: lda\n        }\n    }\n\n    //FOR REFERANCE\n\n    // let options = {\n    //   docs: [],\n    //   motifs: [],\n    //   thresholds: {\n    //     overlap: 0, //Overlap scores\n    //     propability: 0 //Theta\n    //   }\n    // }\n\n    //<Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showMotif(key)}}/>\n\n    // const data = []\n    //     for (let key of Object.keys(this.state.searchData)) {\n    //         if (this.state.searchData[key].includes(this.state.searchtemp)){\n    //             data.push({key: key,...this.state.lda.topic_metadata[key]})\n    //         }\n    //     }\n    // let columns = []\n    // columns.push({Header: 'Key', accessor: 'key'})\n    // for (let key of Object.keys(props.lda.topic_metadata[Object.keys(props.lda.topic_metadata)[0]])) {\n    //     if(props.options.motifs[key])\n    //     columns.push({Header: key, accessor: key})\n    // }\n\n    // showDoc(key) {\n    //   console.log(\"showdoc: \" + key)\n    //   let features = []\n    //   let motifs = []\n    //   for (let a of Object.keys(this.state.lda.phi[key])) { features.push(a) }\n    //   for (let a of Object.keys(this.state.lda.phi[key])) {\n    //     for (let b of Object.keys(this.state.lda.phi[key][a]))\n    //       if (!motifs.includes(b)) {\n    //         motifs.push(b)\n    //       }\n    //   }\n    //   this.setState({\n    //     modal: true,\n    //     modalName: (<h1>Docs page of {key}</h1>),\n    //     showdoc: true,\n    //     showmotif: false,\n    //     features: features,\n    //     motifs: motifs,\n    //     dockey: key,\n    //   })\n    // }\n    infoChange(e, name){\n      let info = this.state.info\n      info[name] = e.target.value\n\n      this.setState({\n        info: info\n      })\n    }\n    isReadOnly(key){\n      let immutable = ['parentmass']\n      if(immutable.includes(key))\n        return true\n      else\n        return false\n    }\n\n    render() {\n        return (\n          <div>\n            <Card body>\n              <Card.Header>Info about the Doc: </Card.Header>\n              <ListGroup>\n                {Object.keys(this.state.info).map( key => { return (\n                  <ListGroup.Item key={key}>\n                    <span>{key}</span>\n                    <input\n                      value={null === this.state.info[key] ? \"\" : this.state.info[key]}\n                      readOnly={this.isReadOnly(key)}\n                      onChange={(e, name = key) => {this.infoChange(e,name)}}\n                    />\n                  </ListGroup.Item>\n                )})}\n              </ListGroup>\n              {/* <ListGroupItem><pre>{JSON.stringify(this.state.info, null, 2)}</pre></ListGroupItem> */}\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Motifs assosiated with Doc</Card.Header>\n              <ListGroup>\n                {/* {this.state.motifs.map(key => { return (<ListGroup.Item key={key} action onClick={() => this.props.showMotif(key)}>{key}</ListGroup.Item>) })} */}\n                <Table data={this.state.motifs} columns={this.state.motifsc} onClick={(key)=>{this.props.showMotif(key)}}/>\n              </ListGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Features in the Doc</Card.Header>\n              <ListGroup>\n                {/* {this.state.features.map(key => { return (<ListGroup.Item key={key}>{key}</ListGroup.Item>) })} */}\n                <Table data={this.state.features} columns={this.state.featuresc} onClick={()=>{}}/>\n              </ListGroup>\n            </Card>\n          </div>\n        );\n      }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\n//import ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n//Table import\nimport Table from './table.js'\n\nexport default class MotifPage extends React.Component {\n  constructor(props) {\n    super(props);\n    let key = props.motifkey\n    let lda = props.lda\n    \n    \n    let features = []\n    let featuresc = [{Header: 'Key', accessor: 'key'}, {Header: 'Probability', accessor: 'prob'}]\n    for (let a of Object.keys(lda.beta[key]))\n      features.push({key: a, prob: lda.beta[key][a]})\n\n\n    let docs = []\n    let docsc = [\n      {Header: 'Key', accessor: 'key'},\n      {Header: 'Probability', accessor: a => Number(a.prob).toFixed(5), sortMethod: (a, b) => Number(a)-Number(b)},\n      {Header: 'Overlap', accessor: a => Number(a.over).toFixed(7), sortMethod: (a, b) => Number(a)-Number(b)},\n    ]\n    \n    for (let a of Object.keys(lda.theta)) {\n      for (let b of Object.keys(lda.theta[a])) {\n        if (b === key) {\n          if (!docs.includes(a)) {\n            if(lda.overlap_scores[a][b]>props.options.thresholds.overlap && lda.theta[a][b]>props.options.thresholds.probability)\n            docs.push({\n              key: a,\n              prob: lda.theta[a][b],\n              over: lda.overlap_scores[a][b],\n            })\n          }\n        }\n      }\n    }\n\n\n    this.state = {\n      motifkey: key,\n      info: lda.topic_metadata[key],\n      features: features,\n      featuresc: featuresc,\n      docs: docs,\n      docsc: docsc,\n      lda: lda,\n      options: this.props.options\n    }\n  }\n\n  //FOR REFERANCE\n\n  // let options = {\n  //   docs: [],\n  //   motifs: [],\n  //   thresholds: {\n  //     overlap: 0, //Overlap scores\n  //     propability: 0 //Theta\n  //   }\n  // }\n\n  //<Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showMotif(key)}}/>\n\n  // const data = []\n  //     for (let key of Object.keys(this.state.searchData)) {\n  //         if (this.state.searchData[key].includes(this.state.searchtemp)){\n  //             data.push({key: key,...this.state.lda.topic_metadata[key]})\n  //         }\n  //     }\n  // let columns = []\n  // columns.push({Header: 'Key', accessor: 'key'})\n  // for (let key of Object.keys(props.lda.topic_metadata[Object.keys(props.lda.topic_metadata)[0]])) {\n  //     if(props.options.motifs[key])\n  //     columns.push({Header: key, accessor: key})\n  // }\n\n  // showMotif(key) {\n  //   console.log(\"showmotif: \" + key)\n  //   let features = []\n  //   let docs = []\n  //   for (let a of Object.keys(this.state.lda.beta[key])) { features.push(a) }\n  //   for (let a of Object.keys(this.state.lda.theta)) {\n  //     for (let b of Object.keys(this.state.lda.theta[a])) {\n  //       if (b === key) {\n  //         if (!docs.includes(a)) {\n  //           docs.push(a)\n  //         }\n  //       }\n  //     }\n  //   }\n  //   this.setState({\n  //     modal: true,\n  //     modalName: (<h1>Motif page of {key}</h1>),\n  //     showmotif: true,\n  //     showdoc: false,\n  //     features: features,\n  //     motifs: [],\n  //     docs: docs,\n  //     motifkey: key,\n  //   })\n  // }\n  infoChange(e, name){\n    let info = this.state.info\n    info[name] = e.target.value\n\n    this.setState({\n      info: info\n    })\n  }\n  isReadOnly(key){\n    let immutable = []\n    if(immutable.includes(key))\n      return true\n    else\n      return false\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Card body>\n          <Card.Header>Info about the Motif: </Card.Header>\n          <ListGroup>\n            {Object.keys(this.state.info).map(key => {\n              return (\n                <ListGroup.Item key={key}>\n                  <span>{key}</span>\n                  <input\n                    value={null === this.state.info[key] ? \"\" : this.state.info[key]}\n                    readOnly={this.isReadOnly(key)}\n                    onChange={(e, name = key) => {this.infoChange(e,name)}}\n                  />\n                </ListGroup.Item>\n              )\n            })}\n          </ListGroup>\n          {/* <ListGroupItem><pre>{JSON.stringify(this.state.info, null, 2)}</pre></ListGroupItem> */}\n        </Card>\n        <br />\n        <Card body>\n          <Card.Header>Docs assosiated with Motif</Card.Header>\n          <ListGroup>\n            <Table data={this.state.docs} columns={this.state.docsc} onClick={(key)=>{this.props.showDoc(key)}}/>\n            {/* {this.state.docs.map(key => { return (<ListGroup.Item key={key} action onClick={() => this.props.showDoc(key)}>{key}</ListGroup.Item>) })} */}\n          </ListGroup>\n        </Card>\n        <br />\n        <Card body>\n          <Card.Header>Features assosiated with Motif</Card.Header>\n          <ListGroup>\n            <Table data={this.state.features} columns={this.state.featuresc} onClick={()=>{}}/>\n            {/* {this.state.features.map(key => { return (<ListGroup.Item key={key}>{key}</ListGroup.Item>) })} */}\n          </ListGroup>\n        </Card>\n      </div>\n    );\n  }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport FormControl from 'react-bootstrap/FormControl';\n//import Table from 'react-bootstrap/Table'\n\n//Other imports\nimport debounce from 'lodash.debounce';\n\n//Table import\nimport Table from './table.js'\n\nexport default class DocsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        //Searchable string\n        let searchData = {}\n        for (let key of Object.keys(props.lda.doc_metadata)) {\n            searchData[key] = JSON.stringify(props.lda.doc_metadata[key])\n        }\n        //Top level keys\n        let columns = []\n        columns.push({Header: 'Name', accessor: 'name'})\n        for (let key of Object.keys(props.lda.doc_metadata[Object.keys(props.lda.doc_metadata)[0]])) {\n            if(props.options.docs[key]){\n                columns.push({Header: key, accessor: key})\n                console.log(props.options.docs[key])\n            }\n        }\n\n        this.state = {\n            search: \"\",\n            searchtemp: \"\",\n            columns: columns,\n            searchData: searchData,\n            lda: props.lda\n        }\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 500)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.searchtemp !== nextState.searchtemp) {\n            return false;\n        } else {\n            return true\n        }\n    }\n\n    searchFilter(e) {\n        this.setState({\n            searchtemp: e.target.value\n        })\n        this.onChangeDebounced(e.target.value)\n    }\n\n    onChangeDebounced = (e) => {\n        if (this.state.searchtemp === e)\n            this.setState({\n                search: this.state.searchtemp\n            })\n    }\n\n    render() {\n        const data = []\n        for (let key of Object.keys(this.state.searchData)) {\n            if (this.state.searchData[key].includes(this.state.searchtemp)){\n                data.push({name: key,...this.state.lda.doc_metadata[key]})\n            }\n        }\n\n        return (\n            <Card body className=\"mx-auto\">\n                <Card.Header>\n                    <h1>Showing Docs</h1>\n                    <FormControl\n                        onChange={e => this.searchFilter(e)}\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        className=\"mr-sm-2\"\n                    />\n                </Card.Header>\n                <Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showDoc(key)}}/>\n            </Card>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import ListGroup from 'react-bootstrap/ListGroup'\nimport Card from 'react-bootstrap/Card'\nimport FormControl from 'react-bootstrap/FormControl';\n\n//Other imports\nimport debounce from 'lodash.debounce';\n\n//Table import\nimport Table from './table.js'\n\n\nexport default class MotifsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        //Searchable string\n        let searchData = {}\n        for (let key of Object.keys(props.lda.topic_metadata)) {\n            searchData[key] = JSON.stringify(props.lda.topic_metadata[key])\n        }\n        //Top level keys\n        let columns = []\n        columns.push({Header: 'Key', accessor: 'key'})\n        for (let key of Object.keys(props.lda.topic_metadata[Object.keys(props.lda.topic_metadata)[0]])) {\n            if(props.options.motifs[key])\n            columns.push({Header: key, accessor: key})\n        }\n        \n        this.state = {\n            search: \"\",\n            searchtemp: \"\",\n            columns: columns,\n            searchData: searchData,\n            lda: props.lda\n        }\n        this.onChangeDebounced = debounce(this.onChangeDebounced, 500)\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.searchtemp !== nextState.searchtemp) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n    \n    searchFilter(e) {\n        this.setState({\n            searchtemp: e.target.value\n        })\n        this.onChangeDebounced(e.target.value)\n    }\n\n    onChangeDebounced = (e) => {\n        if (this.state.searchtemp === e)\n        this.setState({\n            search: this.state.searchtemp\n        })\n    }\n\n    render() {\n        const data = []\n        for (let key of Object.keys(this.state.searchData)) {\n            if (this.state.searchData[key].includes(this.state.searchtemp)){\n                data.push({key: key,...this.state.lda.topic_metadata[key]})\n            }\n        }\n\n        return (\n            <Card body className=\"mx-auto\">\n                <Card.Header>\n                    <h1>Showing Motifs</h1>\n                    <FormControl\n                        onChange={e => this.searchFilter(e)}\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        className=\"mr-sm-2\"\n                    />\n                </Card.Header>\n                <Table data={data} columns={this.state.columns} onClick={(key)=>{this.props.showMotif(key)}}/>\n            </Card>\n        );\n        // return (\n        //     <Card body className=\"mx-auto\">\n        //         <Card.Header>\n        //             <h1>Showing Motifs</h1>\n        //             <FormControl onChange={e => this.searchFilter(e)} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        //         </Card.Header>\n        //         <ListGroup>{Object.keys(this.props.lda.beta).map((key, index) => {\n        //             if (key.includes(this.state.search))\n        //                 return (<ListGroup.Item action key={index} onClick={() => this.props.showMotif(key)}>{key}</ListGroup.Item>)\n        //             else return null\n        //         })}</ListGroup>\n        //     </Card>\n        // );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class DocsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n    render() {\n        return (\n            <header className={\"vertical-center d-flex justify-content-center\"}>\n                <h1>\n                    Import a file to get started!\n                </h1>\n            </header>\n        );\n    }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport Form from 'react-bootstrap/Form'\nimport FormGroup from 'react-bootstrap/FormGroup'\n\n\nexport default class MotifPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            motifs: props.options.motifs,\n            docs: props.options.docs,\n            thresholds: props.options.thresholds\n        }\n    }\n    docsChange(e, name, value){\n      let docs = this.state.docs\n      docs[name] = e.target.checked\n      this.setState({\n        docs: docs\n      })\n    }\n    motifsChange(e, name, value){\n      let motifs = this.state.motifs\n      motifs[name] = e.target.checked\n      this.setState({\n        motifs: motifs\n      })\n    }\n    thresholdsChange(e, name){\n      let thresholds = this.state.thresholds\n      thresholds[name] = e.target.value\n      this.setState({\n        thresholds: thresholds\n      })\n    }\n    // componentWillUnmount(){\n    //   let options = {\n    //     motifs: this.state.motifs,\n    //     docs: this.state.docs,\n    //     thresholds: this.state.thresholds\n    //   }\n    //   this.props.optionChange(options)\n    // }\n    render() {\n        return (\n          <div>\n            <Card body>\n              <Card.Header>Docs View options</Card.Header>\n              <FormGroup>\n              {/* action onClick={() => this.props.showDoc(key)} */}\n                {Object.keys(this.state.docs).map(key => {return (\n                    <Form.Check \n                    type={\"checkbox\"}\n                    id={\"default-checkbox\"}\n                    key={key}\n                    label={key}\n                    checked={this.state.docs[key]}\n                    onChange={(e, name = key) => {this.docsChange(e, name)}}\n                    />\n                )})}\n              </FormGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Motif View options</Card.Header>\n              <FormGroup>\n                {Object.keys(this.state.motifs).map(key => {return (\n                    <Form.Check \n                    type={\"checkbox\"}\n                    id={\"default-checkbox\"}\n                    key={key}\n                    label={key}\n                    checked={this.state.motifs[key]}\n                    onChange={(e, name = key) => {this.motifsChange(e, name)}}\n                    />\n                )})}\n              </FormGroup>\n            </Card>\n            <br />\n            <Card body>\n              <Card.Header>Thresholds</Card.Header>\n              <ListGroup>\n                {Object.keys(this.state.thresholds).map(key => {\n                  return (<ListGroup.Item\n                    key={key}\n                    >\n                    <span>{key}</span>\n                    <input\n                      value={this.state.thresholds[key]}\n                      onChange={(e, name = key) => {this.thresholdsChange(e, name)}}\n                    />\n                </ListGroup.Item>) })}\n              </ListGroup>\n            </Card>\n          </div>\n        );\n      }\n}","//React imports\nimport React from 'react';\n\n//Style import\nimport './modules/App.css';\n\n//Bootstrap imports\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n// import ListGroup from 'react-bootstrap/ListGroup'\n// import Card from 'react-bootstrap/Card'\n// import ListGroupItem from 'react-bootstrap/ListGroupItem';\n\n//Other imports\n\n\n//Component Classes\n\n//Share experiment\nimport GenerateLink from './modules/generate.js';\n\n//About page\nimport AboutPage from './modules/about.js';\n\n//Import JSON page\nimport ImportJSON from './modules/import.js';\n\n//Import Docs page\nimport DocPage from './modules/doc.js';\n\n//Import Motifs page\nimport MotifPage from './modules/motif.js';\n\n//Import Docs page\nimport DocsPage from './modules/docs.js';\n\n//Import Motifs page\nimport MotifsPage from './modules/motifs.js';\n\n//Import Motifs page\nimport EmptyPage from './modules/empty.js';\n\n//Import Options page\nimport Options from './modules/options.js';\n\n//Table testing\n//import EmptyPage from './modules/table.js';\n\n\n//Main app class\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      modalName: \"\",\n      modalBody: \"\",\n      imported: false,\n      about: false,\n      import: false,\n      legacy: false,\n      showdoc: false,\n      showmotif: false,\n      showgenerate: false,\n      bydocs: false,\n      bymotifs: false,\n      dockey: \"\",\n      motifkey: \"\",\n      lda: {},\n      features: [],\n      motifs: [],\n      docs: [],\n      showOptions: false,\n      options: {\n        docs: [],\n        motifs: [],\n        thresholds: [],\n      }\n    };\n    let url_string = window.location.href; // www.test.com?filename=test\n    let url = new URL(url_string);\n    let paramValue = decodeURIComponent(url.searchParams.get(\"fetch_project\"));\n    if (paramValue) { this.linkToState(paramValue); console.log(paramValue) }\n  }\n\n  //Site Modal management ====================================================================\n  CenterModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {props.title}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {props.children}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  setModalShow(showstate) {\n    if (showstate === false) {\n      if (this.state.showOptions){\n\n      }\n      this.setState({\n        modalName: \"\",\n        about: false,\n        import: false,\n        legacy: false,\n        showOptions: false,\n        modal: false,\n        showdoc: false,\n        showmotif: false,\n        showgenerate: false,\n      })\n    } else {\n      this.setState({\n        modal: true,\n      })\n    }\n  }\n\n  linkModal() {\n    console.log(\"link1\")\n    this.setState({\n      modalName: (<h1>Generate a sharable link</h1>),\n      modal: true,\n      showgenerate: true,\n    })\n  }\n\n  importJSON() {\n    console.log(\"import1\")\n    this.setState({\n      modal: true,\n      modalName: \"Import\",\n      import: true,\n    })\n  }\n\n  aboutModal() {\n    console.log(\"about1\")\n    this.setState({\n      modalName: (<h1>About</h1>),\n      modal: true,\n      about: true,\n    })\n  }\n\n  optionsModal() {\n    console.log(\"options1\")\n    this.setState({\n      modalName: (<h1>Options</h1>),\n      modal: true,\n      showOptions: true,\n    })\n  }\n\n  optionChange(options){\n    this.setState({\n      options: options,\n    })\n  }\n\n  //Large unseperated modal functions\n  showDoc(key) {\n    console.log(\"showdoc: \" + key)\n    let features = []\n    let motifs = []\n    for (let a of Object.keys(this.state.lda.phi[key])) { features.push(a) }\n    for (let a of Object.keys(this.state.lda.phi[key])) {\n      for (let b of Object.keys(this.state.lda.phi[key][a]))\n        if (!motifs.includes(b)) {\n          motifs.push(b)\n        }\n    }\n    this.setState({\n      modal: true,\n      modalName: (<h1>Docs page of {key}</h1>),\n      showdoc: true,\n      showmotif: false,\n      features: features,\n      motifs: motifs,\n      dockey: key,\n    })\n  }\n\n  showMotif(key) {\n    console.log(\"showmotif: \" + key)\n    let features = []\n    let docs = []\n    for (let a of Object.keys(this.state.lda.beta[key])) { features.push(a) }\n    for (let a of Object.keys(this.state.lda.theta)) {\n      for (let b of Object.keys(this.state.lda.theta[a])) {\n        if (b === key) {\n          if (!docs.includes(a)) {\n            docs.push(a)\n          }\n        }\n      }\n    }\n    this.setState({\n      modal: true,\n      modalName: (<h1>Motif page of {key}</h1>),\n      showmotif: true,\n      showdoc: false,\n      features: features,\n      motifs: [],\n      docs: docs,\n      motifkey: key,\n    })\n  }\n\n  //Other functions\n  exportJSON() {\n    console.log(\"export1\")\n    var a = document.createElement('A');\n    a.href = URL.createObjectURL(new Blob([JSON.stringify(this.state.lda)]));\n    a.download = \"exportedLDA.json\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  example(which) {\n    if (which === 1)\n    this.linkToState(\"../example/\")\n    else this.linkToState(\"../example2/\")\n  }\n\n  linkToState(url) {\n    fetch(url, { mode: 'no-cors' })\n      .then(response => response.text())\n      .then(data => {\n        let lda = JSON.parse(data)\n        let options = {\n          docs: [],\n          motifs: [],\n          thresholds: {\n            overlap: 0, //Overlap scores\n            probability: 0 //Theta\n          }\n        }\n        for (let key of Object.keys(lda.doc_metadata[Object.keys(lda.doc_metadata)[0]])) {\n            options.docs[key] = true\n        }\n        for (let key of Object.keys(lda.topic_metadata[Object.keys(lda.topic_metadata)[0]])) {\n          options.motifs[key] = true\n        }\n        this.setState({\n          lda: lda,\n          options: options,\n          imported: true,\n          bydocs: true,\n          loading: false,\n        })\n      })\n      .catch(error => console.error(error));\n  }\n\n  discardLDA() {\n    console.log(\"discard\")\n    this.setState({\n      bymotifs: false,\n      bydocs: false,\n      imported: false,\n      lda: \"\",\n    })\n  }\n\n  fileJSON(event) {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = (event) => {\n      let lda = JSON.parse(event.target.result)\n      //console.log(lda)\n      let options = {\n        docs: [],\n        motifs: [],\n        thresholds: {\n          overlap: 0, //Overlap scores\n          probability: 0 //Theta\n        }\n      }\n      for (let key of Object.keys(lda.doc_metadata[Object.keys(lda.doc_metadata)[0]])) {\n          options.docs[key] = true\n      }\n      for (let key of Object.keys(lda.topic_metadata[Object.keys(lda.topic_metadata)[0]])) {\n        options.motifs[key] = true\n      }\n      this.setState({\n        lda: lda,\n        options: options,\n        imported: true,\n        bydocs: true,\n        loading: false,\n      })\n      this.setModalShow(false)\n    };\n    reader.readAsText(file)\n  }\n\n  byToggle(val) {\n    this.setState({\n      bydocs: val,\n      bymotifs: !val,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"MS2LDAviz2\">\n        <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"#home\">MS2LDAviz2</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              {this.state.imported ?\n                < >\n                  <Nav.Link onClick={() => this.exportJSON()}>Export</Nav.Link>\n                  <NavDropdown title=\"Explore LDA\" id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item onClick={() => this.byToggle(true)}>By Docs</NavDropdown.Item>\n                    <NavDropdown.Item onClick={() => this.byToggle(false)}>By Mass2Motifs</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item>Store In-Browser</NavDropdown.Item>\n                  </NavDropdown>\n                  <Nav.Link onClick={() => this.discardLDA()}>Discard</Nav.Link>\n                  <Nav.Link onClick={() => this.optionsModal()}>Options</Nav.Link>\n                </ > : < >\n                  <Nav.Link onClick={() => this.importJSON()}>Import</Nav.Link>\n                  <Nav.Link target=\"_blank\" href={\"../legacy/\"} >Legacy</Nav.Link>\n                </ >}\n            </Nav>\n            <Nav.Link onClick={() => this.linkModal()}>Share</Nav.Link>\n            <Nav.Link onClick={() => this.example(1)}>Example</Nav.Link>\n            <Nav.Link onClick={() => this.example(2)}>Example2</Nav.Link>\n            <Nav.Link onClick={() => this.aboutModal()}>About</Nav.Link>\n          </Navbar.Collapse>\n        </Navbar>\n\n        {!this.state.imported ? <EmptyPage/> : null }\n        {this.state.imported && this.state.bydocs ? <DocsPage options={this.state.options} lda={this.state.lda} showDoc={(key) => this.showDoc(key)} /> : null}\n        {this.state.imported && this.state.bymotifs ? <MotifsPage options={this.state.options} lda={this.state.lda} showMotif={(key) => this.showMotif(key)} /> : null}\n\n        <this.CenterModal\n          show={this.state.modal}\n          onHide={() => this.setModalShow(false)}\n          title={this.state.modalName}>\n          {this.state.showgenerate ?\n            <GenerateLink /> : null}\n          {this.state.about ?\n            <AboutPage /> : null}\n          {this.state.import ?\n            <ImportJSON onChange={e => this.fileJSON(e)} /> : null}\n          {this.state.showOptions ?\n            <Options options={this.state.options} optionChange={(options) => this.optionChange(options)} /> : null}\n          \n          {this.state.showdoc ?\n            <DocPage\n              lda={this.state.lda}\n              options={this.state.options}\n              dockey={this.state.dockey}\n              features={this.state.features}\n              motifs={this.state.motifs}\n              showMotif={(key) => this.showMotif(key)}\n            /> : null}\n\n          {this.state.showmotif ?\n            <MotifPage\n              lda={this.state.lda}\n              options={this.state.options}\n              motifkey={this.state.motifkey}\n              features={this.state.features}\n              docs={this.state.docs}\n              showDoc={(key) => this.showDoc(key)}\n            /> : null}\n\n        </this.CenterModal>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}